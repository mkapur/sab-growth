scale_x_discrete(breaks = c("No Breaks","Break at 25 deg.","Overlap 20-25 deg.","Break at 48 deg.",
"Temporal Break Year 50"))+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Coverage Probability', fill = 'Scenario',
title = 'a) Coverage Probability for Endpoints of Growth Curve') +
geom_bar(stat = 'identity',width=0.6, position = position_dodge(width=0.7)) +
facet_wrap(~variable)
cdfaccu2 <- cdfaccu %>% filter(!(variable %in% c('Lat, Long and Year','Both Latitude and Longitude'))
& scen != "20% Higher k, Break at 25 deg.")
# cdfaccu$scen  <- factor(cdfaccu$scen , levels = cdfaccu$scen [order(cdfprop$prop  )])
plist1[[2]] <- ggplot(cdfaccu2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_blank(),
legend.position = 'none') +
# scale_fill_viridis_d()+
scale_fill_grey( limits = c("No Breaks","Break at 25 deg.","Overlap 20-25 deg.","Break at 48 deg.",
"Temporal Break Year 50"))+  scale_x_discrete(breaks = c("No Breaks","Break at 25 deg.","Overlap 20-25 deg.","Break at 48 deg.",
"Temporal Break Year 50"))+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Proportion Detected Accurate Breaks', fill = 'Scenario', title = 'b) Proportion Detected Accurate Breaks') +
geom_bar(stat = 'identity',width=0.5, position = position_dodge(width=0.5)) +
facet_wrap(~variable, ncol = 3)
ggarrange(plotlist = plist1, ncol=1, nrow=2, common.legend = TRUE, legend="bottom") %>%
ggsave(plot = .,  file = paste0("./figures/STARS_cdfprob_",Sys.Date(),".png"), width = 11, height = 8, units = 'in', dpi = 480)
TA2[order(TA2$ORD),] %>% select(-ORD) %>% write.csv(paste0("figures/table_a2_",Sys.Date(),".csv"), row.names = F)
plist0 <- list(); idx0 <- 1
for(i in 1:length(scens)){
plist  <- list(); idx <- 1
## plot raw data
scen <- scens[i]
tempdf <- read.csv(paste0("./IBM_output/datasets/",scen,"_",bootpicks[i],".csv")) %>% filter(Age == 6)
breaksdf <- read.csv( paste0("./GAM_output/ldf_raw_a6.csv")) %>% filter(scen == scens[i] & boot == bootpicks[i])
load(file = paste0("./GAM_output/mod_",scen,"_",bootpicks[i],".rds")) ## mod for boot 4
load(file = paste0("./GAM_output/m2d_",scen,"_",bootpicks[i],".rds")) ## m2.d for boot 4 (contains derivative info)
Terms <- c("Year","Latitude_dd","Longitude_dd")
if(i < 5){ ## plot tempvar separately
plist0[[idx0]]  <- ggplot(tempdf, aes(y = Latitude_dd, x = Longitude_dd)) +
theme_classic() +
# theme(legend.position = 'none') +
scale_y_continuous(limits = c(-10,60), breaks = seq(0,50,10)) +
geom_point(aes(size = Length_cm, fill = Length_cm), shape = 21, alpha = 0.7) +
scale_fill_gradient2(low = 'black', mid = "grey44",
high ="grey77", midpoint = 65, guide = 'legend') +
scale_size_continuous(range = c(2, 15), guide = 'legend') +
labs(x = 'Longitude',y = 'Latitude',
fill = "Length of Age-6 Fish (cm)",size  = "Length of Age-6 Fish (cm)",
title = paste0(scens.title0[i])) #+
# geom_label(x = 10, y = 50, label = paste0('n = ',nrow(tempdf)),
#            size = 4, fill = 'white')
idx0 <- idx0+1
}
if(i == 5){ ## plot tempvar separately
plist0[[5]]  <- ggplot(tempdf, aes(x = Year, y = Length_cm)) +
theme_classic() +
scale_y_continuous(limits = c(58,80)) +
geom_point(aes(size = Length_cm, fill = Length_cm), shape = 21, alpha = 0.7) +
scale_fill_gradient2(low = 'black', mid = "grey44",
high ="grey77", midpoint = 65, guide = 'legend') +
scale_size_continuous(range = c(2, 15), guide = 'legend') +
labs(x = 'Year', y = 'Length of Age Six Fish (cm)',
fill = "Length of Age-6 Fish (cm)",size  = "Length of Age-6 Fish (cm)",
title = paste0(scens.title0[i])) #+
}
ggsave(plot = last_plot(),  file = paste0("./figures/rawdat_",scen,".png"),
width = 5, height = 5, units = 'in', dpi = 480)
## map showing new breaks
if(i < 5){
plist[[idx]] <- ggplot(tempdf, aes(y = Latitude_dd, x = Longitude_dd)) +
theme_classic() +
theme(legend.position = 'right') +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
geom_point(aes(size = Length_cm, fill = Length_cm), shape = 21, alpha = 0.7) +
scale_fill_gradient2(low = 'black', mid = "grey44",
high ="grey77", midpoint = 65, guide = 'legend') +
scale_size_continuous(range = c(2, 15), guide = 'legend') +
labs(x = 'Longitude',y = 'Latitude',
fill = "Length of Age-6 Fish (cm)",size  = "Length of Age-6 Fish (cm)",
title = paste0(scens.title[i], ' Data and GAM-detected breaks ')) +
geom_hline(yintercept = breaksdf$lat_breaks, lwd = 1.1, linetype = 'dashed', col = 'red') +
geom_vline(xintercept = breaksdf$lon_breaks, lwd = 1.1, linetype = 'dashed', col = 'red')
idx <- idx + 1
}
if(i == 5){ ## plot tempvar separately
plist[[idx]] <- ggplot(tempdf, aes(x = Year, y = Length_cm)) +
theme_classic() +
theme(legend.position = 'right') +
scale_y_continuous(limits = c(58,80)) +
geom_point(aes(size = Length_cm, fill = Length_cm), shape = 21, alpha = 0.7) +
scale_fill_gradient2(low = 'black', mid = "grey44",
high ="grey77", midpoint = 65, guide = 'legend') +
scale_size_continuous(range = c(2, 15), guide = 'legend') +
labs(x = 'Year', y = 'Length of Age Six Fish (cm)',
fill = "Length of Age-6 Fish (cm)",size  = "Length of Age-6 Fish (cm)",
title = paste0(scens.title0[i])) +
# geom_label(x = 10, y = 400, label = paste0('n = ',nrow(tempdf)),
#            size = 4, fill = 'white') +
geom_vline(xintercept = breaksdf$yr_breaks, lwd = 1.1, linetype = 'dashed', col = 'red')
idx <- idx + 1
}
# ## plot GAM smooth and deriv -- will have to be from single, sorta-representative boot
for(t in 1:length(Terms)){
pd <- plot(mod,   select = t, scheme  =2, lwd  =2, main = paste0(Terms[t],' Smoother'), cex.axis = 2, ylim = c(-10,ifelse(t != 3,10,500)))
temp0 <- pd[t] ## get this smoother
temp <- data.frame(cbind(temp0[[1]]$x,temp0[[1]]$fit, temp0[[1]]$se)); names(temp) = c('x','fit','se')
if(t == 1){
xlims <- c(0,100)
} else{ xlims <- c(0,50)}
## plot smooth
plist[[idx]] <-  ggplot(temp, aes(x = x, y = fit)) +
theme_minimal() +
theme(panel.grid = element_blank())+
geom_line(lwd = 1.1) +
scale_x_continuous(limits = xlims) +
geom_line(aes(y= fit-se), linetype = 'dashed') +
geom_line(aes(y= fit+se), linetype = 'dashed') +
geom_rug(sides = 'b') +
labs(x = Terms[t], y = "smoother", title = paste0(letters[idx-1],") ",'Smoother for ',Terms[t] ))
idx <- idx+1
CI <- confint(m2.d, term = Terms[t])
m2.dtemp <- data.frame(cbind(m2.d$eval[,Terms[t]], m2.d[[Terms[t]]]$deriv,
CI[[1]]$upper, CI[[1]]$lower)); names(m2.dtemp) = c('x','deriv','upper','lower')
## plot deriv
# if(i < 5){
plist[[idx]] <-  ggplot(m2.dtemp,aes(x = x, y = deriv))    +
theme_minimal() +
theme(panel.grid = element_blank())+
geom_line(lwd = 1.1) +
scale_x_continuous(limits = xlims) +
geom_hline(yintercept = 0, col = 'grey22') +
geom_line(aes(y= upper), linetype = 'dashed') +
geom_line(aes(y= lower), linetype = 'dashed') +
geom_vline(xintercept = breaksdf[,c('yr_breaks','lat_breaks','lon_breaks')[t]],
col = 'red', lwd = 1.1, linetype = 'dashed') +
labs(x = Terms[t], y = "f'(x)", title = paste0(letters[idx-1],") ",'First Derivative for ', Terms[t]))
idx <- idx+1
} ## end Terms
lay <- rbind(c(2,2,1,1,1),
c(3,3,1,1,1),
c(4,4,1,1,1),
c(5,5,1,1,1),
c(6,6,1,1,1),
c(7,7,1,1,1))
grid.arrange(grobs = plist[1:7], layout_matrix = lay) %>%
ggsave(plot = .,  file = paste0("./figures/GAM_analysis_",scen,".png"), width = 11, height = 8, units = 'in', dpi = 480)
}
# "g) 20% Higher k, Break at 25 deg.""c) Scenario 3 20% Higher k, Break at 25 deg.",
## panel plot of one gendata for each scenario ---
source("./functions/Deriv.R")
scenarios <- read.csv('./input_data/scenarios.csv',na.strings = 'NA') %>% filter(DESC != 'F0L1S_R3')
scens <-  unique(scenarios$DESC)
scens.title <- scens.title0 <- scens
levels(scens.title) <-  c("g) Scenario 2 Break at 25 deg.", "g) Scenario 4 Break at 48 deg.",
"g) Scenario 3 Overlap 20-25 deg.","g) Scenario 1 No Breaks",
"g) Scenario 5 Temporal Break Year 50")
levels(scens.title0) <-  c("b) Scenario 2 Break at 25 deg.", "d) Scenario 4 Break at 48 deg.",
"c) Scenario 3 Overlap 20-25 deg.","a) Scenario 1 No Breaks",
"e) Scenario 5 Temporal Break Year 50")
## use this to determine bootpicks for plotting
cdf_gam <- read.csv(paste0("GAM_output/cdf_2019-09-27.csv"))
plist0 <- list(); idx0 <- 1
for(i in 1:length(scens)){
plist  <- list(); idx <- 1
## plot raw data
scen <- scens[i]
tempdf <- read.csv(paste0("./IBM_output/datasets/",scen,"_",bootpicks[i],".csv")) %>% filter(Age == 6)
breaksdf <- read.csv( paste0("./GAM_output/ldf_raw_a6.csv")) %>% filter(scen == scens[i] & boot == bootpicks[i])
load(file = paste0("./GAM_output/mod_",scen,"_",bootpicks[i],".rds")) ## mod for boot 4
load(file = paste0("./GAM_output/m2d_",scen,"_",bootpicks[i],".rds")) ## m2.d for boot 4 (contains derivative info)
Terms <- c("Year","Latitude_dd","Longitude_dd")
if(i < 5){ ## plot tempvar separately
plist0[[idx0]]  <- ggplot(tempdf, aes(y = Latitude_dd, x = Longitude_dd)) +
theme_classic() +
# theme(legend.position = 'none') +
scale_y_continuous(limits = c(-10,60), breaks = seq(0,50,10)) +
geom_point(aes(size = Length_cm, fill = Length_cm), shape = 21, alpha = 0.7) +
scale_fill_gradient2(low = 'black', mid = "grey44",
high ="grey77", midpoint = 65, guide = 'legend') +
scale_size_continuous(range = c(2, 15), guide = 'legend') +
labs(x = 'Longitude',y = 'Latitude',
fill = "Length of Age-6 Fish (cm)",size  = "Length of Age-6 Fish (cm)",
title = paste0(scens.title0[i])) #+
# geom_label(x = 10, y = 50, label = paste0('n = ',nrow(tempdf)),
#            size = 4, fill = 'white')
idx0 <- idx0+1
}
if(i == 5){ ## plot tempvar separately
plist0[[5]]  <- ggplot(tempdf, aes(x = Year, y = Length_cm)) +
theme_classic() +
scale_y_continuous(limits = c(58,80)) +
geom_point(aes(size = Length_cm, fill = Length_cm), shape = 21, alpha = 0.7) +
scale_fill_gradient2(low = 'black', mid = "grey44",
high ="grey77", midpoint = 65, guide = 'legend') +
scale_size_continuous(range = c(2, 15), guide = 'legend') +
labs(x = 'Year', y = 'Length of Age Six Fish (cm)',
fill = "Length of Age-6 Fish (cm)",size  = "Length of Age-6 Fish (cm)",
title = paste0(scens.title0[i])) #+
}
ggsave(plot = last_plot(),  file = paste0("./figures/rawdat_",scen,".png"),
width = 5, height = 5, units = 'in', dpi = 480)
## map showing new breaks
if(i < 5){
plist[[idx]] <- ggplot(tempdf, aes(y = Latitude_dd, x = Longitude_dd)) +
theme_classic() +
theme(legend.position = 'right') +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
geom_point(aes(size = Length_cm, fill = Length_cm), shape = 21, alpha = 0.7) +
scale_fill_gradient2(low = 'black', mid = "grey44",
high ="grey77", midpoint = 65, guide = 'legend') +
scale_size_continuous(range = c(2, 15), guide = 'legend') +
labs(x = 'Longitude',y = 'Latitude',
fill = "Length of Age-6 Fish (cm)",size  = "Length of Age-6 Fish (cm)",
title = paste0(scens.title[i], ' Data and GAM-detected breaks ')) +
geom_hline(yintercept = breaksdf$lat_breaks, lwd = 1.1, linetype = 'dashed', col = 'red') +
geom_vline(xintercept = breaksdf$lon_breaks, lwd = 1.1, linetype = 'dashed', col = 'red')
idx <- idx + 1
}
if(i == 5){ ## plot tempvar separately
plist[[idx]] <- ggplot(tempdf, aes(x = Year, y = Length_cm)) +
theme_classic() +
theme(legend.position = 'right') +
scale_y_continuous(limits = c(58,80)) +
geom_point(aes(size = Length_cm, fill = Length_cm), shape = 21, alpha = 0.7) +
scale_fill_gradient2(low = 'black', mid = "grey44",
high ="grey77", midpoint = 65, guide = 'legend') +
scale_size_continuous(range = c(2, 15), guide = 'legend') +
labs(x = 'Year', y = 'Length of Age Six Fish (cm)',
fill = "Length of Age-6 Fish (cm)",size  = "Length of Age-6 Fish (cm)",
title = paste0(scens.title0[i])) +
# geom_label(x = 10, y = 400, label = paste0('n = ',nrow(tempdf)),
#            size = 4, fill = 'white') +
geom_vline(xintercept = breaksdf$yr_breaks, lwd = 1.1, linetype = 'dashed', col = 'red')
idx <- idx + 1
}
# ## plot GAM smooth and deriv -- will have to be from single, sorta-representative boot
for(t in 1:length(Terms)){
pd <- plot(mod,   select = t, scheme  =2, lwd  =2, main = paste0(Terms[t],' Smoother'), cex.axis = 2, ylim = c(-10,ifelse(t != 3,10,500)))
temp0 <- pd[t] ## get this smoother
temp <- data.frame(cbind(temp0[[1]]$x,temp0[[1]]$fit, temp0[[1]]$se)); names(temp) = c('x','fit','se')
if(t == 1){
xlims <- c(0,100)
} else{ xlims <- c(0,50)}
## plot smooth
plist[[idx]] <-  ggplot(temp, aes(x = x, y = fit)) +
theme_minimal() +
theme(panel.grid = element_blank())+
geom_line(lwd = 1.1) +
scale_x_continuous(limits = xlims) +
geom_line(aes(y= fit-se), linetype = 'dashed') +
geom_line(aes(y= fit+se), linetype = 'dashed') +
geom_rug(sides = 'b') +
labs(x = Terms[t], y = "smoother", title = paste0(letters[idx-1],") ",'Smoother for ',Terms[t] ))
idx <- idx+1
CI <- confint(m2.d, term = Terms[t])
m2.dtemp <- data.frame(cbind(m2.d$eval[,Terms[t]], m2.d[[Terms[t]]]$deriv,
CI[[1]]$upper, CI[[1]]$lower)); names(m2.dtemp) = c('x','deriv','upper','lower')
## plot deriv
# if(i < 5){
plist[[idx]] <-  ggplot(m2.dtemp,aes(x = x, y = deriv))    +
theme_minimal() +
theme(panel.grid = element_blank())+
geom_line(lwd = 1.1) +
scale_x_continuous(limits = xlims) +
geom_hline(yintercept = 0, col = 'grey22') +
geom_line(aes(y= upper), linetype = 'dashed') +
geom_line(aes(y= lower), linetype = 'dashed') +
geom_vline(xintercept = breaksdf[,c('yr_breaks','lat_breaks','lon_breaks')[t]],
col = 'red', lwd = 1.1, linetype = 'dashed') +
labs(x = Terms[t], y = "f'(x)", title = paste0(letters[idx-1],") ",'First Derivative for ', Terms[t]))
idx <- idx+1
} ## end Terms
lay <- rbind(c(2,2,1,1,1),
c(3,3,1,1,1),
c(4,4,1,1,1),
c(5,5,1,1,1),
c(6,6,1,1,1),
c(7,7,1,1,1))
grid.arrange(grobs = plist[1:7], layout_matrix = lay) %>%
ggsave(plot = .,  file = paste0("./figures/GAM_analysis_",scen,".png"), width = 11, height = 8, units = 'in', dpi = 480)
}
# "g) 20% Higher k, Break at 25 deg.""c) Scenario 3 20% Higher k, Break at 25 deg.",
## panel plot of one gendata for each scenario ---
source("./functions/Deriv.R")
scenarios <- read.csv('./input_data/scenarios.csv',na.strings = 'NA') %>% filter(DESC != 'F0L1S_R3')
scens <-  unique(scenarios$DESC)
scens.title <- scens.title0 <- scens
levels(scens.title) <-  c("g) Scenario 2 Break at 25 deg.", "g) Scenario 4 Break at 48 deg.",
"g) Scenario 3 Overlap 20-25 deg.","g) Scenario 1 No Breaks",
"g) Scenario 5 Temporal Break Year 50")
levels(scens.title0) <-  c("b) Scenario 2 Break at 25 deg.", "d) Scenario 4 Break at 48 deg.",
"c) Scenario 3 Overlap 20-25 deg.","a) Scenario 1 No Breaks",
"e) Scenario 5 Temporal Break Year 50")
## use this to determine bootpicks for plotting
cdf_gam <- read.csv(paste0("GAM_output/cdf_2019-09-27.csv"))
cdf_gam %>% filter(LAT == TRUE & LON == TRUE & YEAR == TRUE) %>% group_by(scen) %>% dplyr::summarise(min(boot))
bootpicks <-c(1,11,1,1,1) ##25, 48, FLMW, NOB, TEMP
plist0 <- list(); idx0 <- 1
for(i in 1:length(scens)){
plist  <- list(); idx <- 1
## plot raw data
scen <- scens[i]
tempdf <- read.csv(paste0("./IBM_output/datasets/",scen,"_",bootpicks[i],".csv")) %>% filter(Age == 6)
breaksdf <- read.csv( paste0("./GAM_output/ldf_raw_a6.csv")) %>% filter(scen == scens[i] & boot == bootpicks[i])
load(file = paste0("./GAM_output/mod_",scen,"_",bootpicks[i],".rds")) ## mod for boot 4
load(file = paste0("./GAM_output/m2d_",scen,"_",bootpicks[i],".rds")) ## m2.d for boot 4 (contains derivative info)
Terms <- c("Year","Latitude_dd","Longitude_dd")
if(i < 5){ ## plot tempvar separately
plist0[[idx0]]  <- ggplot(tempdf, aes(y = Latitude_dd, x = Longitude_dd)) +
theme_classic() +
# theme(legend.position = 'none') +
scale_y_continuous(limits = c(-10,60), breaks = seq(0,50,10)) +
geom_point(aes(size = Length_cm, fill = Length_cm), shape = 21, alpha = 0.7) +
scale_fill_gradient2(low = 'black', mid = "grey44",
high ="grey77", midpoint = 65, guide = 'legend') +
scale_size_continuous(range = c(2, 15), guide = 'legend') +
labs(x = 'Longitude',y = 'Latitude',
fill = "Length of Age-6 Fish (cm)",size  = "Length of Age-6 Fish (cm)",
title = paste0(scens.title0[i])) #+
# geom_label(x = 10, y = 50, label = paste0('n = ',nrow(tempdf)),
#            size = 4, fill = 'white')
idx0 <- idx0+1
}
if(i == 5){ ## plot tempvar separately
plist0[[5]]  <- ggplot(tempdf, aes(x = Year, y = Length_cm)) +
theme_classic() +
scale_y_continuous(limits = c(58,80)) +
geom_point(aes(size = Length_cm, fill = Length_cm), shape = 21, alpha = 0.7) +
scale_fill_gradient2(low = 'black', mid = "grey44",
high ="grey77", midpoint = 65, guide = 'legend') +
scale_size_continuous(range = c(2, 15), guide = 'legend') +
labs(x = 'Year', y = 'Length of Age Six Fish (cm)',
fill = "Length of Age-6 Fish (cm)",size  = "Length of Age-6 Fish (cm)",
title = paste0(scens.title0[i])) #+
}
ggsave(plot = last_plot(),  file = paste0("./figures/rawdat_",scen,".png"),
width = 5, height = 5, units = 'in', dpi = 480)
## map showing new breaks
if(i < 5){
plist[[idx]] <- ggplot(tempdf, aes(y = Latitude_dd, x = Longitude_dd)) +
theme_classic() +
theme(legend.position = 'right') +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
geom_point(aes(size = Length_cm, fill = Length_cm), shape = 21, alpha = 0.7) +
scale_fill_gradient2(low = 'black', mid = "grey44",
high ="grey77", midpoint = 65, guide = 'legend') +
scale_size_continuous(range = c(2, 15), guide = 'legend') +
labs(x = 'Longitude',y = 'Latitude',
fill = "Length of Age-6 Fish (cm)",size  = "Length of Age-6 Fish (cm)",
title = paste0(scens.title[i], ' Data and GAM-detected breaks ')) +
geom_hline(yintercept = breaksdf$lat_breaks, lwd = 1.1, linetype = 'dashed', col = 'red') +
geom_vline(xintercept = breaksdf$lon_breaks, lwd = 1.1, linetype = 'dashed', col = 'red')
idx <- idx + 1
}
if(i == 5){ ## plot tempvar separately
plist[[idx]] <- ggplot(tempdf, aes(x = Year, y = Length_cm)) +
theme_classic() +
theme(legend.position = 'right') +
scale_y_continuous(limits = c(58,80)) +
geom_point(aes(size = Length_cm, fill = Length_cm), shape = 21, alpha = 0.7) +
scale_fill_gradient2(low = 'black', mid = "grey44",
high ="grey77", midpoint = 65, guide = 'legend') +
scale_size_continuous(range = c(2, 15), guide = 'legend') +
labs(x = 'Year', y = 'Length of Age Six Fish (cm)',
fill = "Length of Age-6 Fish (cm)",size  = "Length of Age-6 Fish (cm)",
title = paste0(scens.title0[i])) +
# geom_label(x = 10, y = 400, label = paste0('n = ',nrow(tempdf)),
#            size = 4, fill = 'white') +
geom_vline(xintercept = breaksdf$yr_breaks, lwd = 1.1, linetype = 'dashed', col = 'red')
idx <- idx + 1
}
# ## plot GAM smooth and deriv -- will have to be from single, sorta-representative boot
for(t in 1:length(Terms)){
pd <- plot(mod,   select = t, scheme  =2, lwd  =2, main = paste0(Terms[t],' Smoother'), cex.axis = 2, ylim = c(-10,ifelse(t != 3,10,500)))
temp0 <- pd[t] ## get this smoother
temp <- data.frame(cbind(temp0[[1]]$x,temp0[[1]]$fit, temp0[[1]]$se)); names(temp) = c('x','fit','se')
if(t == 1){
xlims <- c(0,100)
} else{ xlims <- c(0,50)}
## plot smooth
plist[[idx]] <-  ggplot(temp, aes(x = x, y = fit)) +
theme_minimal() +
theme(panel.grid = element_blank())+
geom_line(lwd = 1.1) +
scale_x_continuous(limits = xlims) +
geom_line(aes(y= fit-se), linetype = 'dashed') +
geom_line(aes(y= fit+se), linetype = 'dashed') +
geom_rug(sides = 'b') +
labs(x = Terms[t], y = "smoother", title = paste0(letters[idx-1],") ",'Smoother for ',Terms[t] ))
idx <- idx+1
CI <- confint(m2.d, term = Terms[t])
m2.dtemp <- data.frame(cbind(m2.d$eval[,Terms[t]], m2.d[[Terms[t]]]$deriv,
CI[[1]]$upper, CI[[1]]$lower)); names(m2.dtemp) = c('x','deriv','upper','lower')
## plot deriv
# if(i < 5){
plist[[idx]] <-  ggplot(m2.dtemp,aes(x = x, y = deriv))    +
theme_minimal() +
theme(panel.grid = element_blank())+
geom_line(lwd = 1.1) +
scale_x_continuous(limits = xlims) +
geom_hline(yintercept = 0, col = 'grey22') +
geom_line(aes(y= upper), linetype = 'dashed') +
geom_line(aes(y= lower), linetype = 'dashed') +
geom_vline(xintercept = breaksdf[,c('yr_breaks','lat_breaks','lon_breaks')[t]],
col = 'red', lwd = 1.1, linetype = 'dashed') +
labs(x = Terms[t], y = "f'(x)", title = paste0(letters[idx-1],") ",'First Derivative for ', Terms[t]))
idx <- idx+1
} ## end Terms
lay <- rbind(c(2,2,1,1,1),
c(3,3,1,1,1),
c(4,4,1,1,1),
c(5,5,1,1,1),
c(6,6,1,1,1),
c(7,7,1,1,1))
grid.arrange(grobs = plist[1:7], layout_matrix = lay) %>%
ggsave(plot = .,  file = paste0("./figures/GAM_analysis_",scen,".png"), width = 11, height = 8, units = 'in', dpi = 480)
}
ggarrange(plotlist = plist0, ncol=2, nrow=3, common.legend = TRUE, legend="bottom") %>%
ggsave(plot = .,  file = paste0("./figures/rawdata_compile.png"), width = 11, height = 8, units = 'in', dpi = 480)
cdfaccu
cdfaccu <- read.csv(paste0('./gam_output/cdf_accu_2019-09-27.csv'))
relcdfaccu <- read.csv(paste0('./gam_output/relaxed_cdf_accu_2019-09-27.csv'))
cdfaccu
cdfprop
## GAM propagg----
cdfprop <- read.csv(paste0('./gam_output/cdf_prop_2019-09-27.csv'))
cdfprop
cdfaccu
## many false edges were nearby
cdf_gam %>%
filter(scen == 'F0L1S_49' & LON == FALSE) %>%
group_by(gamLON) %>% dplyr::summarise(n=n())
cdf_gam %>%
filter(scen == 'F0L1S_49') %>%
group_by(gamLAT) %>% dplyr::summarise(n=n())
cdf_gam %>%
filter(scen == 'F0L1S_25') %>%
group_by(gamLAT) %>% dplyr::summarise(n=n())
cdfaccu
relcdfaccu
#
cdf_gam %>%
filter(L1 == FALSE) %>%
dplyr::group_by(scen) %>%
dplyr::summarise( meanL1 = mean(abs(L1_MISS)))
#
cdf_gam %>%
filter(L2 == FALSE) %>%
dplyr::group_by(scen) %>%
# dplyr::group_by(scen, YEAR) %>%
dplyr::summarise( meanL2 = mean(abs(L2_MISS)))
## GAM propagg----
cdfprop <- read.csv(paste0('./gam_output/cdf_prop_2019-09-27.csv'))
levels(cdfprop$scen) <- c("Break at 25 deg.", "Break at 48 deg.", "Overlap 20-25 deg.","No Breaks","Temporal Break Year 50")
# cdfprop$scen  <- factor(cdfprop$scen , levels = cdfprop$scen [order(cdfprop$prop )])
levels(cdfprop$variable) <- c('L1','L2' )
cdfprop2 <- cdfprop %>% filter(!(variable %in% c('Both L1 and L2')) &
scen != "20% Higher k, Break at 25 deg.")
# cdfprop$variable <- factor(cdfprop$variable, levels=c('L1','L2','Both L1 and L2'))
plist1 <- list()
plist1[[1]] <- ggplot(cdfprop2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_blank(),
legend.position = c(0.6,0.9)) +
scale_fill_manual(values = cbbPalette, limits = c("No Breaks","Break at 25 deg.","Overlap 20-25 deg.","Break at 48 deg.",
"Temporal Break Year 50"))+
scale_x_discrete(limits = c("No Breaks","Break at 25 deg.","Overlap 20-25 deg.","Break at 48 deg.",
"Temporal Break Year 50")) +
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Coverage Probability', fill = 'Scenario',
title = 'a) Coverage Probability for Endpoints of Growth Curve') +
geom_bar(stat = 'identity',width=0.6, position = position_dodge(width=0.7)) +
facet_wrap(~variable)
cdfaccu <- read.csv(paste0('./gam_output/cdf_accu_2019-09-27.csv'))
relcdfaccu <- read.csv(paste0('./gam_output/relaxed_cdf_accu_2019-09-27.csv'))
levels(cdfaccu$scen) <- levels(relcdfaccu$scen) <-  c("Break at 25 deg.", "Break at 48 deg.", "Overlap 20-25 deg.","No Breaks","Temporal Break Year 50")
# cdfprop$scen  <- factor(cdfprop$scen , levels = cdfprop$scen [order(cdfprop$prop )])
levels(cdfaccu$variable) <-levels(relcdfaccu$variable) <-  c('Latitude', 'Longitude' ,'Year')
cdfaccu2 <- cdfaccu %>% filter(!(variable %in% c('Lat, Long and Year','Both Latitude and Longitude'))&
scen != "20% Higher k, Break at 25 deg.")
relcdfaccu2 <- relcdfaccu %>% filter(!(variable %in% c('Lat, Long and Year','Both Latitude and Longitude'))&
scen != "20% Higher k, Break at 25 deg.")
# cdfaccu$scen  <- factor(cdfaccu$scen , levels = cdfaccu$scen [order(cdfprop$prop  )])
plist1[[2]] <- ggplot(cdfaccu2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_blank(),
legend.position = 'none') +
scale_fill_manual(values = cbbPalette, limits = c("No Breaks","Break at 25 deg.","Overlap 20-25 deg.","Break at 48 deg.",
"Temporal Break Year 50"))+
scale_x_discrete(limits = c("No Breaks","Break at 25 deg.","Overlap 20-25 deg.","Break at 48 deg.",
"Temporal Break Year 50")) +
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Proportion Detected Accurate Breaks', fill = 'Scenario', title = 'b) Proportion Detected Accurate Breaks') +
geom_bar(stat = 'identity',width=0.5, position = position_dodge(width=0.5)) +
facet_wrap(~variable, nrow = 1)
plist1[[3]] <- ggplot(relcdfaccu2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_blank(),
legend.position = 'none') +
scale_fill_manual(values = cbbPalette, limits = c("No Breaks","Break at 25 deg.","Overlap 20-25 deg.","Break at 48 deg.",
"Temporal Break Year 50"))+
scale_x_discrete(limits = c("No Breaks","Break at 25 deg.","Overlap 20-25 deg.","Break at 48 deg.",
"Temporal Break Year 50"))+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Proportion Detected Accurate Breaks', fill = 'Scenario',
title = 'c) Proportion Detected Accurate Breaks with relaxed criteria') +
geom_bar(stat = 'identity',width=0.5, position = position_dodge(width=0.5)) +
facet_wrap(~variable, nrow = 1)
ggarrange(plotlist = plist1, ncol=1, nrow=3, common.legend = TRUE, legend="bottom") %>%
ggsave(plot = .,  file = paste0("./figures/GAM_cdfprob_",Sys.Date(),".png"), width = 11, height = 8, units = 'in', dpi = 480)
