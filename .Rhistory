# N1 <- y[1]
# N2 <- y[2]
alpha <- parameters[1]
beta <- parameters[2]
delta <- parameters[3]
gamma <- parameters[4]
# a21 <- parameters[5]
# k2 <- parameters[6]
#
#
dy <- numeric(2)
dy[1] <-  (x^2)/(1+x)*(1/x+1-alpha*(1+x)-beta*y)#prey_zgi(x)# r1*N1*(1-(N1+a12*N2)/k1)
dy[2] <-   gamma*y*(1- y/(1+delta*x)) #pred_zgi(x) #r2*N2*(1-a21*N1/k2)
list(dy)
}
# r1, a12, k1, r2, a21, k2
# a21 < k2/k1
params <- c(0.5, 2, 0.6, 0.2)
# params[6] / params[3] > params[5]
# alpha = ; beta = 2; delta = 0.6; gamma = 0.2
lotkaVolterra.flowField <- flowField(myfield, xlim = c(0, 5), ylim = c(0, 10), system = 'two.dim',
parameters = params, points = 19, add = FALSE, lwd = 2, xaxt = "n", yaxt = "n")
x
## a function that returns both isoclines
myfield <- function(t,y,parameters) {
N1 <- y[1]
N2 <- y[2]
alpha <- parameters[1]
beta <- parameters[2]
delta <- parameters[3]
gamma <- parameters[4]
# a21 <- parameters[5]
# k2 <- parameters[6]
#
#
dy <- numeric(2)
dy[1] <-  (N1^2)/(1+N1)*(1/N1+1-alpha*(1+N1)-beta*y)#prey_zgi(x)# r1*N1*(1-(N1+a12*N2)/k1)
dy[2] <-   gamma*N2*(1- y/(1+delta*N2)) #pred_zgi(x) #r2*N2*(1-a21*N1/k2)
list(dy)
}
# r1, a12, k1, r2, a21, k2
# a21 < k2/k1
params <- c(0.5, 2, 0.6, 0.2)
# params[6] / params[3] > params[5]
# alpha = ; beta = 2; delta = 0.6; gamma = 0.2
lotkaVolterra.flowField <- flowField(myfield, xlim = c(0, 5), ylim = c(0, 10), system = 'two.dim',
parameters = params, points = 19, add = FALSE, lwd = 2, xaxt = "n", yaxt = "n")
## a function that returns both isoclines
myfield <- function(t,y,parameters) {
N1 <- y[1]
N2 <- y[2]
alpha <- parameters[1]
beta <- parameters[2]
delta <- parameters[3]
gamma <- parameters[4]
# a21 <- parameters[5]
# k2 <- parameters[6]
#
#
dy <- dx <- numeric(2)
dx[1] <-  (N1^2)/(1+N1)*(1/N1+1-alpha*(1+N1)-beta*y)#prey_zgi(x)# r1*N1*(1-(N1+a12*N2)/k1)
dy[2] <-   gamma*N2*(1- y/(1+delta*N2)) #pred_zgi(x) #r2*N2*(1-a21*N1/k2)
list(dy)
}
# r1, a12, k1, r2, a21, k2
# a21 < k2/k1
params <- c(0.5, 2, 0.6, 0.2)
# params[6] / params[3] > params[5]
# alpha = ; beta = 2; delta = 0.6; gamma = 0.2
lotkaVolterra.flowField <- flowField(myfield, xlim = c(0, 5), ylim = c(0, 10), system = 'two.dim',
parameters = params, points = 19, add = FALSE, lwd = 2, xaxt = "n", yaxt = "n")
grid()
lotkaVolterra.nullclines <- nullclines(lotkaVolterra, xlim = c(-1, 5), ylim = c(-1, 10),
parameters = params, points = 500, lwd = 3)
params <- c(2, 1, 3, 2, 2, 2)
# params[6] / params[3] > params[5]
# alpha = ; beta = 2; delta = 0.6; gamma = 0.2
lotkaVolterra.flowField <- flowField(myfield, xlim = c(0, 5), ylim = c(0, 10), system = 'two.dim',
parameters = params, points = 19, add = FALSE, lwd = 2, xaxt = "n", yaxt = "n")
# params[6] / params[3] > params[5]
# alpha = ; beta = 2; delta = 0.6; gamma = 0.2
lotkaVolterra.flowField <- flowField(myfield, xlim = c(0, 5), ylim = c(0, 10),
parameters = params, points = 19, add = FALSE, lwd = 2, xaxt = "n", yaxt = "n")
## a function that returns both isoclines
myfield <- function(t,y,parameters) {
N1 <- y[1]
N2 <- y[2]
alpha <- parameters[1]
beta <- parameters[2]
delta <- parameters[3]
gamma <- parameters[4]
# a21 <- parameters[5]
# k2 <- parameters[6]
#
#
dy <- dx <- numeric(2)
dx[1] <-  (N1^2)/(1+N1)*(1/N1+1-alpha*(1+N1)-beta*y)#prey_zgi(x)# r1*N1*(1-(N1+a12*N2)/k1)
dy[2] <-   gamma*N2*(1- y/(1+delta*N2)) #pred_zgi(x) #r2*N2*(1-a21*N1/k2)
list(dy)
}
# r1, a12, k1, r2, a21, k2
# a21 < k2/k1
params <- c(0.5, 2, 0.6, 0.2)
# params[6] / params[3] > params[5]
# alpha = ; beta = 2; delta = 0.6; gamma = 0.2
lotkaVolterra.flowField <- flowField(myfield, xlim = c(0, 10), ylim = c(0, 10),
parameters = params, points = 19, add = FALSE, lwd = 2, xaxt = "n", yaxt = "n")
grid()
lotkaVolterra.nullclines <- nullclines(lotkaVolterra, xlim = c(-1, 5), ylim = c(-1, 10),
parameters = params, points = 500, lwd = 3)
params <- c(2, 1, 3, 2, 2, 2)
# params[6] / params[3] > params[5]
# alpha = ; beta = 2; delta = 0.6; gamma = 0.2
lotkaVolterra.flowField <- flowField(myfield, xlim = c(0, 10), ylim = c(0, 10),
parameters = params, points = 19, add = FALSE, lwd = 2, xaxt = "n", yaxt = "n")
lotkaVolterra.flowField
params <- c(0.5, 2, 0.6, 0.2)
# params[6] / params[3] > params[5]
# alpha = ; beta = 2; delta = 0.6; gamma = 0.2
lotkaVolterra.flowField <- flowField(myfield, xlim = c(0, 10), ylim = c(0, 10),
parameters = params, points = 19, add = FALSE, lwd = 2, xaxt = "n", yaxt = "n")
grid()
lotkaVolterra.nullclines <- nullclines(lotkaVolterra, xlim = c(-1, 5), ylim = c(-1, 10),
parameters = params, points = 500, lwd = 3)
# alpha = ; beta = 2; delta = 0.6; gamma = 0.2
lotkaVolterra.flowField <- flowField(myfield, xlim = c(0, 10), ylim = c(0, 10),
parameters = params, points = 19, add = FALSE, lwd = 2, xaxt = "n", yaxt = "n")
grid()
lotkaVolterra.nullclines <- nullclines(myfield, xlim = c(-1, 5), ylim = c(-1, 10),
parameters = params, points = 500, lwd = 3)
lotkaVolterra.nullclines <- nullclines(myfield, xlim = c(0, 10), ylim = c(0, 10),
parameters = params, points = 500, lwd = 1)
graphics.off()
lotkaVolterra.nullclines <- nullclines(myfield, xlim = c(0, 10), ylim = c(0, 10), system = 'two.dim',
parameters = params, points = 500, lwd = 1)
# alpha = ; beta = 2; delta = 0.6; gamma = 0.2
lotkaVolterra.flowField <- flowField(myfield, xlim = c(0, 10), ylim = c(0, 10),
parameters = params, points = 19, add = FALSE, lwd = 2, xaxt = "n", yaxt = "n")
grid()
lotkaVolterra.nullclines <- nullclines(myfield, xlim = c(0, 10), ylim = c(0, 10), system = 'two.dim',
parameters = params, points = 500, lwd = 1)
# params[6] / params[3] > params[5]
# alpha = ; beta = 2; delta = 0.6; gamma = 0.2
lotkaVolterra.flowField <- flowField(myfield, xlim = c(0, 10), ylim = c(0, 10),
parameters = params, points = 19, add = FALSE, lwd = 2, xaxt = "n", yaxt = "n")
mod <- SS_output("C:/Users/Maia Kapur/Dropbox/UW/assessments/sab_2019/200.00_base_files_29May/100.00_base_files/afsc_selex/100.13")
require(r4ss)
mod <- SS_output("C:/Users/Maia Kapur/Dropbox/UW/assessments/sab_2019/200.00_base_files_29May/100.00_base_files/afsc_selex/100.13")
SSplotSelex(mod)
SSplotSelex(mod, subplots = 1)
SSplotSelex(mod, subplot = 1)
SSplotSelex(mod, subplot = 1)
SSplotSelex(mod, subplot = 2)
SSplotSelex(mod, subplot = 3)
SSplotSelex(mod, subplot = 4)
SSplotSelex(mod, subplot = 5)
SSplotSelex(mod, subplot = 6)
SSplotSelex(mod, subplot = 7)
SSplotSelex(mod, subplot = 8)
SSplotSelex(mod, subplot = 9)
SSplotSelex(mod, subplot = 10)
10
SSplotSelex(mod, subplot = 10)
SSplotSelex(mod, subplot = 15)
SSplotSelex(mod, subplot = 15)
graphics.off(0)
graphics.off()
SSplotSelex(mod, subplot = 12)
SSplotSelex(mod, subplot = 13)
SSplotSelex(mod, subplot = 14)
plist<-list();idx <-1
for(combos in list(c(-2,1),c(-1,1), c(0.5,1),c(0.5,-1))){
beta <- 2; alpha <- combos[1]; delta <- combos[2]
prey_zgi  <- function(x){y = 1/beta * (1/x+1-alpha*(1+x))
return(y)}
pred_zgi <-function(x){y = 1+delta*x
return(y)}
df <- data.frame(x = rep(0,1000), y = seq(0,1000,length.out = 100), source = 'prey1 (x = 0)') %>%
bind_rows(data.frame(x = seq(0,1000,length.out = 100), y = prey_zgi( seq(0,10,length.out = 100)), source = 'prey2')) %>%
bind_rows( data.frame(x = seq(0,1000,length.out = 100), y = rep(0,10000), source = 'predator1 (y = 0)')) %>%
bind_rows(data.frame(x = seq(0,1000,length.out = 100), y = pred_zgi( seq(0,1000,length.out = 100)), source = 'predator2'))
plist[[idx]]<- ggplot(df, aes(x = x, y = y, color = source)) +
theme_classic() +
# theme(axis.text = element_blank(), axis.ticks = element_blank()) +
geom_line(lwd = 0.9) +
# geom_vline(xintercept = 0,col = 'blue',lwd = 0.9) +
scale_x_continuous(expand = c(0, 0.01), limits = c(0,10)) +
scale_y_continuous(expand = c(0, 0.05), limits = c(0,10)) +
scale_color_manual(values = c('gold','gold2','dodgerblue3','blue')) +
labs(
x = "prey x",
y = "pred y",
color = '',
title = paste0('beta = ', beta, ' alpha = ', alpha, ' delta = ', delta)
)
idx <- idx+1
}
Rmisc::multiplot(plotlist=plist, cols = 2)
Rmisc::multiplot(plotlist=plist, cols = 2)
plist<-list();idx <-1
for(combos in list(c(-2,1),c(-1,1), c(0.5,1),c(0.5,-1))){
beta <- 2; alpha <- combos[1]; delta <- combos[2]
prey_zgi  <- function(x){y = 1/beta * (1/x+1-alpha*(1+x))
return(y)}
pred_zgi <-function(x){y = 1+delta*x
return(y)}
df <- data.frame(x = rep(0,1000), y = seq(0,1000,length.out = 100), source = 'prey1 (x = 0)') %>%
bind_rows(data.frame(x = seq(0,1000,length.out = 1000), y = prey_zgi( seq(0,10,length.out = 100)), source = 'prey2')) %>%
bind_rows( data.frame(x = seq(0,1000,length.out = 1000), y = rep(0,1000), source = 'predator1 (y = 0)')) %>%
bind_rows(data.frame(x = seq(0,1000,length.out = 1000), y = pred_zgi( seq(0,1000,length.out = 1000)), source = 'predator2'))
plist[[idx]]<- ggplot(df, aes(x = x, y = y, color = source)) +
theme_classic() +
# theme(axis.text = element_blank(), axis.ticks = element_blank()) +
geom_line(lwd = 0.9) +
# geom_vline(xintercept = 0,col = 'blue',lwd = 0.9) +
# scale_x_continuous(expand = c(0, 0.01), limits = c(0,10)) +
# scale_y_continuous(expand = c(0, 0.05), limits = c(0,10)) +
scale_color_manual(values = c('gold','gold2','dodgerblue3','blue')) +
labs(
x = "prey x",
y = "pred y",
color = '',
title = paste0('beta = ', beta, ' alpha = ', alpha, ' delta = ', delta)
)
idx <- idx+1
}
Rmisc::multiplot(plotlist=plist, cols = 2)
plist[[1]]
plist<-list();idx <-1
for(combos in list(c(-2,1),c(-1,1), c(0.5,1),c(0.5,-1))){
beta <- 2; alpha <- combos[1]; delta <- combos[2]
prey_zgi  <- function(x){y = 1/beta * (1/x+1-alpha*(1+x))
return(y)}
pred_zgi <-function(x){y = 1+delta*x
return(y)}
df <- data.frame(x = rep(0,100), y = seq(0,100,length.out = 100), source = 'prey1 (x = 0)') %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = prey_zgi( seq(0,10,length.out = 100)), source = 'prey2')) %>%
bind_rows( data.frame(x = seq(0,100,length.out = 100), y = rep(0,1000), source = 'predator1 (y = 0)')) %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = pred_zgi( seq(0,100,length.out = 100)), source = 'predator2'))
plist[[idx]]<- ggplot(df, aes(x = x, y = y, color = source)) +
theme_classic() +
# theme(axis.text = element_blank(), axis.ticks = element_blank()) +
geom_line(lwd = 0.9) +
# geom_vline(xintercept = 0,col = 'blue',lwd = 0.9) +
# scale_x_continuous(expand = c(0, 0.01), limits = c(0,10)) +
# scale_y_continuous(expand = c(0, 0.05), limits = c(0,10)) +
scale_color_manual(values = c('gold','gold2','dodgerblue3','blue')) +
labs(
x = "prey x",
y = "pred y",
color = '',
title = paste0('beta = ', beta, ' alpha = ', alpha, ' delta = ', delta)
)
idx <- idx+1
}
Rmisc::multiplot(plotlist=plist, cols = 2)
plist[[1]]
plist<-list();idx <-1
for(combos in list(c(-2,1),c(-1,1), c(0.5,1),c(0.5,-1))){
beta <- 2; alpha <- combos[1]; delta <- combos[2]
prey_zgi  <- function(x){y = 1/beta * (1/x+1-alpha*(1+x))
return(y)}
pred_zgi <-function(x){y = 1+delta*x
return(y)}
df <- data.frame(x = rep(0,100), y = seq(0,100,length.out = 100), source = 'prey1 (x = 0)') %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = prey_zgi( seq(0,10,length.out = 100)), source = 'prey2')) %>%
bind_rows( data.frame(x = seq(0,100,length.out = 100), y = rep(0,1000), source = 'predator1 (y = 0)')) %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = pred_zgi( seq(0,100,length.out = 100)), source = 'predator2'))
plist[[idx]]<- ggplot(df, aes(x = x, y = y, color = source)) +
theme_classic() +
# theme(axis.text = element_blank(), axis.ticks = element_blank()) +
geom_line(lwd = 0.9) +
# geom_vline(xintercept = 0,col = 'blue',lwd = 0.9) +
scale_x_continuous(expand = c(0, 0.01), limits = c(0,100)) +
scale_y_continuous(expand = c(0, 0.05), limits = c(0,100)) +
scale_color_manual(values = c('gold','gold2','dodgerblue3','blue')) +
labs(
x = "prey x",
y = "pred y",
color = '',
title = paste0('beta = ', beta, ' alpha = ', alpha, ' delta = ', delta)
)
idx <- idx+1
}
Rmisc::multiplot(plotlist=plist, cols = 2)
plist[[1]]
plist<-list();idx <-1
for(combos in list(c(-2,1),c(-1,1), c(0.5,1),c(0.5,-1))){
beta <- 2; alpha <- combos[1]; delta <- combos[2]
prey_zgi  <- function(x){y = 1/beta * (1/x+1-alpha*(1+x))
return(y)}
pred_zgi <-function(x){y = 1+delta*x
return(y)}
df <- data.frame(x = rep(0,100), y = seq(0,100,length.out = 100), source = 'prey1 (x = 0)') %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = prey_zgi( seq(0,10,length.out = 100)), source = 'prey2')) %>%
bind_rows( data.frame(x = seq(0,100,length.out = 100), y = rep(0,1000), source = 'predator1 (y = 0)')) %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = pred_zgi( seq(0,100,length.out = 100)), source = 'predator2'))
plist[[idx]]<- ggplot(df, aes(x = x, y = y, color = source)) +
theme_classic() +
# theme(axis.text = element_blank(), axis.ticks = element_blank()) +
geom_line(lwd = 0.9) +
# geom_vline(xintercept = 0,col = 'blue',lwd = 0.9) +
scale_x_continuous(expand = c(0, 0.01), limits = c(0,100)) +
scale_y_continuous(expand = c(0, 0.05), limits = c(0,ifelse(delta == -1,25,100))) +
scale_color_manual(values = c('gold','gold2','dodgerblue3','blue')) +
labs(
x = "prey x",
y = "pred y",
color = '',
title = paste0('beta = ', beta, ' alpha = ', alpha, ' delta = ', delta)
)
idx <- idx+1
}
Rmisc::multiplot(plotlist=plist, cols = 2)
plist[[1]]
plist<-list();idx <-1
for(combos in list(c(-2,1),c(-1,1), c(0.5,1),c(0.5,-1))){
beta <- 2; alpha <- combos[1]; delta <- combos[2]
prey_zgi  <- function(x){y = 1/beta * (1/x+1-alpha*(1+x))
return(y)}
pred_zgi <-function(x){y = 1+delta*x
return(y)}
df <- data.frame(x = rep(0,100), y = seq(0,100,length.out = 100), source = 'prey1 (x = 0)') %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = prey_zgi( seq(0,10,length.out = 100)), source = 'prey2')) %>%
bind_rows( data.frame(x = seq(0,100,length.out = 100), y = rep(0,1000), source = 'predator1 (y = 0)')) %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = pred_zgi( seq(0,100,length.out = 100)), source = 'predator2'))
plist[[idx]]<- ggplot(df, aes(x = x, y = y, color = source)) +
theme_classic() +
# theme(axis.text = element_blank(), axis.ticks = element_blank()) +
geom_line(lwd = 0.9) +
# geom_vline(xintercept = 0,col = 'blue',lwd = 0.9) +
scale_x_continuous(expand = c(0, 0.01), limits = c(0,ifelse(delta == -1,10,100)))) +
plist<-list();idx <-1
for(combos in list(c(-2,1),c(-1,1), c(0.5,1),c(0.5,-1))){
beta <- 2; alpha <- combos[1]; delta <- combos[2]
prey_zgi  <- function(x){y = 1/beta * (1/x+1-alpha*(1+x))
return(y)}
pred_zgi <-function(x){y = 1+delta*x
return(y)}
df <- data.frame(x = rep(0,100), y = seq(0,100,length.out = 100), source = 'prey1 (x = 0)') %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = prey_zgi( seq(0,10,length.out = 100)), source = 'prey2')) %>%
bind_rows( data.frame(x = seq(0,100,length.out = 100), y = rep(0,1000), source = 'predator1 (y = 0)')) %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = pred_zgi( seq(0,100,length.out = 100)), source = 'predator2'))
plist[[idx]]<- ggplot(df, aes(x = x, y = y, color = source)) +
theme_classic() +
# theme(axis.text = element_blank(), axis.ticks = element_blank()) +
geom_line(lwd = 0.9) +
# geom_vline(xintercept = 0,col = 'blue',lwd = 0.9) +
scale_x_continuous(expand = c(0, 0.01), limits = c(0,ifelse(delta == -1,10,100))) +
scale_y_continuous(expand = c(0, 0.05), limits = c(0,ifelse(delta == -1,10,100))) +
scale_color_manual(values = c('gold','gold2','dodgerblue3','blue')) +
labs(
x = "prey x",
y = "pred y",
color = '',
title = paste0('beta = ', beta, ' alpha = ', alpha, ' delta = ', delta)
)
idx <- idx+1
}
Rmisc::multiplot(plotlist=plist, cols = 2)
plist[[1]]
plist<-list();idx <-1
for(combos in list(c(-2,1),c(-1,1), c(0.5,1),c(0.5,-1))){
beta <- 2; alpha <- combos[1]; delta <- combos[2]
prey_zgi  <- function(x){y = 1/beta * (1/x+1-alpha*(1+x))
return(y)}
pred_zgi <-function(x){y = 1+delta*x
return(y)}
df <- data.frame(x = rep(0,100), y = seq(0,100,length.out = 100), source = 'prey1 (x = 0)') %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = prey_zgi( seq(0,100,length.out = 100)), source = 'prey2')) %>%
bind_rows( data.frame(x = seq(0,100,length.out = 100), y = rep(0,100), source = 'predator1 (y = 0)')) %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = pred_zgi( seq(0,100,length.out = 100)), source = 'predator2'))
plist[[idx]]<- ggplot(df, aes(x = x, y = y, color = source)) +
theme_classic() +
# theme(axis.text = element_blank(), axis.ticks = element_blank()) +
geom_line(lwd = 0.9) +
# geom_vline(xintercept = 0,col = 'blue',lwd = 0.9) +
scale_x_continuous(expand = c(0, 0.01), limits = c(0,ifelse(delta == -1,10,100))) +
scale_y_continuous(expand = c(0, 0.05), limits = c(0,ifelse(delta == -1,10,100))) +
scale_color_manual(values = c('gold','gold2','dodgerblue3','blue')) +
labs(
x = "prey x",
y = "pred y",
color = '',
title = paste0('beta = ', beta, ' alpha = ', alpha, ' delta = ', delta)
)
idx <- idx+1
}
Rmisc::multiplot(plotlist=plist, cols = 2)
# plist[[1]]
plist<-list();idx <-1
for(combos in list(c(-2,1),c(-1,1), c(0.5,1),c(0.5,-1))){
beta <- 2; alpha <- combos[1]; delta <- combos[2]
prey_zgi  <- function(x){y = 1/beta * (1/x+1-alpha*(1+x))
return(y)}
pred_zgi <-function(x){y = 1+delta*x
return(y)}
df <- data.frame(x = rep(0,100), y = seq(0,100,length.out = 100), source = 'prey1 (x = 0)') %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = prey_zgi( seq(0,100,length.out = 100)), source = 'prey2')) %>%
bind_rows( data.frame(x = seq(0,100,length.out = 100), y = rep(0,100), source = 'predator1 (y = 0)')) %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = pred_zgi( seq(0,100,length.out = 100)), source = 'predator2'))
plist[[idx]]<- ggplot(df, aes(x = x, y = y, color = source)) +
theme_classic() +
# theme(axis.text = element_blank(), axis.ticks = element_blank()) +
geom_line(lwd = 0.9) +
# geom_vline(xintercept = 0,col = 'blue',lwd = 0.9) +
# scale_x_continuous(expand = c(0, 0.01), limits = c(0,ifelse(delta == -1,10,100))) +
# scale_y_continuous(expand = c(0, 0.05), limits = c(0,ifelse(delta == -1,10,100))) +
scale_color_manual(values = c('gold','gold2','dodgerblue3','blue')) +
labs(
x = "prey x",
y = "pred y",
color = '',
title = paste0('beta = ', beta, ' alpha = ', alpha, ' delta = ', delta)
)
idx <- idx+1
}
Rmisc::multiplot(plotlist=plist, cols = 2)
# plist[[1]]
plist<-list();idx <-1
for(combos in list(c(-2,1),c(-1,1), c(0.5,1),c(0.5,-1))){
beta <- 2; alpha <- combos[1]; delta <- combos[2]
prey_zgi  <- function(x){y = 1/beta * (1/x+1-alpha*(1+x))
return(y)}
pred_zgi <-function(x){y = 1+delta*x
return(y)}
df <- data.frame(x = rep(0,100), y = seq(0,100,length.out = 100), source = 'prey1 (x = 0)') %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = prey_zgi( seq(0,100,length.out = 100)), source = 'prey2')) %>%
bind_rows( data.frame(x = seq(0,100,length.out = 100), y = rep(0,100), source = 'predator1 (y = 0)')) %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = pred_zgi( seq(0,100,length.out = 100)), source = 'predator2'))
plist[[idx]]<- ggplot(df, aes(x = x, y = y, color = source)) +
theme_classic() +
# theme(axis.text = element_blank(), axis.ticks = element_blank()) +
geom_line(lwd = 0.9) +
# geom_vline(xintercept = 0,col = 'blue',lwd = 0.9) +
scale_x_continuous(expand = c(0, 0.01), limits = c(0,ifelse(delta == -1,25,100))) +
scale_y_continuous(expand = c(0, 0.05), limits = c(0,ifelse(delta == -1,25,100))) +
scale_color_manual(values = c('gold','gold2','dodgerblue3','blue')) +
labs(
x = "prey x",
y = "pred y",
color = '',
title = paste0('beta = ', beta, ' alpha = ', alpha, ' delta = ', delta)
)
idx <- idx+1
}
Rmisc::multiplot(plotlist=plist, cols = 2)
# plist[[1]]
plist<-list();idx <-1
for(combos in list(c(-2,1),c(-1,1), c(0.5,1),c(0.5,-1))){
beta <- 2; alpha <- combos[1]; delta <- combos[2]
prey_zgi  <- function(x){y = 1/beta * (1/x+1-alpha*(1+x))
return(y)}
pred_zgi <-function(x){y = 1+delta*x
return(y)}
df <- data.frame(x = rep(0,100), y = seq(0,100,length.out = 100), source = 'prey1 (x = 0)') %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = prey_zgi( seq(0,100,length.out = 100)), source = 'prey2')) %>%
bind_rows( data.frame(x = seq(0,100,length.out = 100), y = rep(0,100), source = 'predator1 (y = 0)')) %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = pred_zgi( seq(0,100,length.out = 100)), source = 'predator2'))
plist[[idx]]<- ggplot(df, aes(x = x, y = y, color = source)) +
theme_classic() +
# theme(axis.text = element_blank(), axis.ticks = element_blank()) +
geom_line(lwd = 0.9) +
# geom_vline(xintercept = 0,col = 'blue',lwd = 0.9) +
scale_x_continuous(expand = c(0, 0.01), limits = c(0,ifelse(delta == -1,50,100))) +
scale_y_continuous(expand = c(0, 0.05), limits = c(0,ifelse(delta == -1,50,100))) +
scale_color_manual(values = c('gold','gold2','dodgerblue3','blue')) +
labs(
x = "prey x",
y = "pred y",
color = '',
title = paste0('beta = ', beta, ' alpha = ', alpha, ' delta = ', delta)
)
idx <- idx+1
}
Rmisc::multiplot(plotlist=plist, cols = 2)
# plist[[1]]
rm(list = ls())
plist<-list();idx <-1
for(combos in list(c(-2,1),c(-1,1), c(0.5,1),c(0.5,-1))){
beta <- 2; alpha <- combos[1]; delta <- combos[2]
prey_zgi  <- function(x){y = 1/beta * (1/x+1-alpha*(1+x))
return(y)}
pred_zgi <-function(x){y = 1+delta*x
return(y)}
df <- data.frame(x = rep(0,100), y = seq(0,100,length.out = 100), source = 'prey1 (x = 0)') %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = prey_zgi( seq(0,100,length.out = 100)), source = 'prey2')) %>%
bind_rows( data.frame(x = seq(0,100,length.out = 100), y = rep(0,100), source = 'predator1 (y = 0)')) %>%
bind_rows(data.frame(x = seq(0,100,length.out = 100), y = pred_zgi( seq(0,100,length.out = 100)), source = 'predator2'))
plist[[idx]]<- ggplot(df, aes(x = x, y = y, color = source)) +
theme_classic() +
# theme(axis.text = element_blank(), axis.ticks = element_blank()) +
geom_line(lwd = 0.9) +
# geom_vline(xintercept = 0,col = 'blue',lwd = 0.9) +
scale_x_continuous(expand = c(0, 0.01), limits = c(0,ifelse(delta == -1,50,100))) +
scale_y_continuous(expand = c(0, 0.05), limits = c(0,ifelse(delta == -1,50,100))) +
scale_color_manual(values = c('gold','gold2','dodgerblue3','blue')) +
labs(
x = "prey x",
y = "pred y",
color = '',
title = paste0('beta = ', beta, ' alpha = ', alpha, ' delta = ', delta)
)
idx <- idx+1
}
Rmisc::multiplot(plotlist=plist, cols = 2)
# plist[[1]]
Terms <- c("Year","Latitude_dd","Longitude_dd")
source('C:/Users/Maia Kapur/Dropbox/UW/sab-growth/STARS_master.R', echo=TRUE)
source('C:/Users/Maia Kapur/Dropbox/UW/sab-growth/STARS_master.R', echo=TRUE)
warnings()
source('C:/Users/Maia Kapur/Dropbox/UW/sab-growth/STARS_master.R', echo=TRUE)
