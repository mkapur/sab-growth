# names(dat0) <- paste0(unique(len$st_f))
# names(dat0) <- paste0(c(rep('uniform_',6),rep('min_',6),rep('max_',6)),paste0(unique(len$st_f)))
names(dat0) <- paste0(c(rep('uniform_',6),rep('dome_',6)),paste0(unique(len$st_f)))
agedf <- agemat  %>% data.frame() %>% reshape::melt()  %>% plyr::rename(c("value" = "Age")) %>% select(-variable)
lendf <- lenmat %>% data.frame()
# names(lendf) <-  paste0(rep('Length_',6),paste0(unique(len$st_f)))
names(lendf) <- c('deep_n','mid_n','shallow_n','deep_s', "mid_s","shallow_s")
mdf<- bind_cols(dat0,  lendf) %>% reshape::melt(id = c())  %>% plyr::rename(c( 'variable' = 'ID', 'value' = 'Length')) %>%
mutate(model = sub('_.*$','', ID), st = sub(".*_ *(.*?)", "\\1", ID), age = rep(agedf$Age,3))  %>% select(-ID)
## for plotting
mdf$st_f = factor(mdf$st, levels=c('deep_n','mid_n','shallow_n','deep_s', "mid_s","shallow_s"))
# save(mdf,file =  paste0(getwd(),"/uniform_predicts.rda"))
ggplot(subset(mdf, model == 'Length'), aes(x = age, y = Length)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
# scale_y_continuous(limits = c(0,100)) +
# scale_x_continuous(limits = c(0,50)) +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1)+
facet_wrap(~ st_f) +
labs(
title = "Predicted Model Fits and Subsampled Data",
y = 'Length (cm)',
x = 'Age (yr)',
subtitle = 'Points are actual subsampled data used in parameter fitting',
color = 'selectivity model'
)
# ggsave(file = paste0(getwd()
ggplot(len, aes(x = Age, y = Length_cm)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
# scale_color_brewer(palette = 'Dark2') +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1) +
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits and Raw Data",
y = 'Length (cm)', x= 'Age (yr)',
subtitle = 'Parameters estimated using subset of each strata, not sex-specific',
color = 'selectivity model')
head(bind_cols(dat0,  lendf) )
paste0(rep('Length_',6),c('deep_n','mid_n','shallow_n','deep_s', "mid_s","shallow_s"))
names(dat0) <- paste0(c(rep('uniform_',6),rep('dome_',6)),paste0(unique(len$st_f)))
agedf <- agemat  %>% data.frame() %>% reshape::melt()  %>% plyr::rename(c("value" = "Age")) %>% select(-variable)
lendf <- lenmat %>% data.frame()
# names(lendf) <-  paste0(rep('Length_',6),paste0(unique(len$st_f)))
names(lendf) <- paste0(rep('Length_',6),c('deep_n','mid_n','shallow_n','deep_s', "mid_s","shallow_s"))
mdf<- bind_cols(dat0,  lendf) %>% reshape::melt(id = c())  %>% plyr::rename(c( 'variable' = 'ID', 'value' = 'Length')) %>%
mutate(model = sub('_.*$','', ID), st = sub(".*_ *(.*?)", "\\1", ID), age = rep(agedf$Age,3))  %>% select(-ID)
## for plotting
mdf$st_f = factor(mdf$st, levels=c('deep_n','mid_n','shallow_n','deep_s', "mid_s","shallow_s"))
# save(mdf,fil
ggplot(len, aes(x = Age, y = Length_cm)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
# scale_color_brewer(palette = 'Dark2') +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1) +
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits and Raw Data",
y = 'Length (cm)', x= 'Age (yr)',
subtitle = 'Parameters estimated using subset of each strata, not sex-specific',
color = 'selectivity model')
ggplot(len, aes(x = Age, y = Length_cm)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
# scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
# scale_color_brewer(palette = 'Dark2') +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1) +
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits and Raw Data",
y = 'Length (cm)', x= 'Age (yr)',
subtitle = 'Parameters estimated using subset of each strata, not sex-specific',
color = 'selectivity model')
ggplot(len, aes(x = Age, y = Length_cm)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
# scale_y_continuous(limits = c(0,100)) +
# scale_x_continuous(limits = c(0,50)) +
# scale_color_brewer(palette = 'Dark2') +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1) +
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits and Raw Data",
y = 'Length (cm)', x= 'Age (yr)',
subtitle = 'Parameters estimated using subset of each strata, not sex-specific',
color = 'selectivity model')
ggplot(subset(mdf, model == 'Length'), aes(x = age, y = Length)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
# scale_y_continuous(limits = c(0,100)) +
# scale_x_continuous(limits = c(0,50)) +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1)+
facet_wrap(~ st_f) +
labs(
title = "Predicted Model Fits and Subsampled Data",
y = 'Length (cm)',
x = 'Age (yr)',
subtitle = 'Points are actual subsampled data used in parameter fitting',
color = 'selectivity model'
)
ggplot(len, aes(x = Age, y = Length_cm)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
# scale_color_brewer(palette = 'Dark2') +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1) +
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits and Raw Data",
y = 'Length (cm)', x= 'Age (yr)',
subtitle = 'Parameters estimated using subset of each strata, not sex-specific',
color = 'selectivity model')
names(len)
len %>% select(Length_cm, Sex, st) %>% mutate(ID = 1:nrow(.)) %>% melt(., id = c('st', 'ID'),'Length_cm') %>%
reshape::cast(., ID + value ~ st, fill = NA, drop= T) %>% select(-ID, -value)
len %>% select(Length_cm, Sex, st) %>% mutate(ID = 1:nrow(.)) %>% melt(., id = c('st', 'ID',"Sex"),'Length_cm') %>%
reshape::cast(., ID + value ~ st, fill = NA, drop= T) %>% select(-ID, -value)
head( len %>% select(Length_cm, Sex, st) %>% mutate(ID = 1:nrow(.)) %>% melt(., id = c('st', 'ID',"Sex"),'Length_cm') %>%
reshape::cast(., ID + value ~ st + Sex, fill = NA, drop= T) %>% select(-ID, -value)
## omi)
head( len %>% select(Length_cm, Sex, st) %>% mutate(ID = 1:nrow(.)) %>% melt(., id = c('st', 'ID',"Sex"),'Length_cm') %>%
reshape::cast(., ID + value ~ st + Sex, fill = NA, drop= T) %>% select(-ID, -value))
load( paste0(getwd(),"/filtered_SAB_WC.rda"))
agemat0 <-
len %>% filter(Sex != 'U') %>% select(Age, st, Sex) %>% mutate(ID = 1:nrow(.)) %>% melt(., id = c('st', 'ID',"Sex"),'Age') %>%
reshape::cast(., ID + value ~ st + Sex, fill = NA, drop= T) %>% select(-ID, -value)
lenmat0 <-
len %>% filter(Sex != 'U') %>% select(Length_cm, Sex, st) %>% mutate(ID = 1:nrow(.)) %>% melt(., id = c('st', 'ID',"Sex"),'Length_cm') %>%
reshape::cast(., ID + value ~ st + Sex, fill = NA, drop= T) %>% select(-ID, -value)
## omit NA
array
?array
## omit NAs and select 500 from each strata
agemat <- lenmat <-  array(NA, dim = c(8481, length(unique(len$st)), 2))
i = 1
s = 2
(s-1)*2+i
(s-1)*6+i
## omit NAs and select 500 from each strata
agemat <- lenmat <-  array(NA, dim = c(8481, length(unique(len$st)), 2))
# matrix(NA, nrow = 8481, ncol = length(unique(len$st)))
nmat <- NULL
for(s in 1:2){
for(i in 1:nStrata){
idx <- (s-1)*6+i
nr <- length(na.omit(agemat0[,idx]))
# agemat[1:nr,i] <- data.frame(na.omit(agemat0[,i])) ##if there is a value in one, should be in the other as well
# agemat[,i] <- bind_cols(data.frame(agemat), data.frame(na.omit(agemat0[,i])))
agemat[s,1:nr,i] <- matrix(na.omit(agemat0[,idx]),ncol = 1)
lenmat[s,1:nr,i] <- matrix(na.omit(lenmat0[,idx]),ncol = 1)
nmat[idx] <- nr ## store lengths of each
# idx <- sample(1:nrow(temp),500) ## pick 500 rows and store index
# agemat[,i] <- temp[idx,] %>% as.matrix()
# lenmat[,i] <- data.frame(na.omit(lenmat0[,i]))[idx,] %>% as.matrix()
}
}
idx
i
s
nr <- length(na.omit(agemat0[,idx]))
for(s in 1:2){
for(i in 1:nStrata){
idx <- (s-1)*6+i
nr <- length(na.omit(agemat0[,idx]))
# agemat[1:nr,i] <- data.frame(na.omit(agemat0[,i])) ##if there is a value in one, should be in the other as well
# agemat[,i] <- bind_cols(data.frame(agemat), data.frame(na.omit(agemat0[,i])))
agemat[1:nr,i,s] <- matrix(na.omit(agemat0[,idx]),ncol = 1)
lenmat[1:nr,i,s] <- matrix(na.omit(lenmat0[,idx]),ncol = 1)
nmat[idx] <- nr ## store lengths of each
# idx <- sample(1:nrow(temp),500) ## pick 500 rows and store index
# agemat[,i] <- temp[idx,] %>% as.matrix()
# lenmat[,i] <- data.frame(na.omit(lenmat0[,i]))[idx,] %>% as.matrix()
}
}
agemat
str(agemat)
agemat[1,1,1]
agemat[1,1,2]
hist(agemat[,3,2])
unique(len$st_f)
with(subset(len, st_f == 'shallow_s' & sex == 'F'), hist(Length_cm))
with(subset(len, st_f == 'shallow_s' & Sex == 'F'), hist(Length_cm))
with(subset(len, st_f == 'shallow_s' & Sex == 'F'), hist(Age))
hist(agemat[,3,2])
hist(agemat[,6,2])
hist(agemat[,6,2], limits = c(0,20))
hist(agemat[,6,2], xlim = c(0,20))
with(subset(len, st_f == 'shallow_s' & Sex == 'F'), hist(Age, xlim = c(0,20)))
sum(!is.na(agemat[,,2]))
sum(!is.na(agemat[,,1]))
head(len)
head(lenmat0)
lenmat0( %>% select(shallow_n_F, deep_F))
lenmat0 %>% select(shallow_n_F, deep_F)
grep('_F',names(agemat0))
agemat0[,grep('_F',names(agemat0))]
agemat0 <- agemat0[,grep(c("M","F")[s],names(agemat0))]
dim(agemat0)
agemat0 <-
len %>% filter(Sex != 'U') %>% select(Age, st, Sex) %>% mutate(ID = 1:nrow(.)) %>% melt(., id = c('st', 'ID',"Sex"),'Age') %>%
reshape::cast(., ID + value ~ st + Sex, fill = NA, drop= T) %>% select(-ID, -value)
lenmat0 <-
len %>% filter(Sex != 'U') %>% select(Length_cm, Sex, st) %>% mutate(ID = 1:nrow(.)) %>% melt(., id = c('st', 'ID',"Sex"),'Length_cm') %>%
reshape::cast(., ID + value ~ st + Sex, fill = NA, drop= T) %>% select(-ID, -value)
## omit NAs and select 500 from each strata
agemat <- lenmat <-  array(NA, dim = c(8481, length(unique(len$st)), 2))
# matrix(NA, nrow = 8481, ncol = length(unique(len$st)))
nmat <- NULL
for(s in 1:2){
for(i in 1:nStrata){
# idx <- (s-1)*6+i
agemat0 <- agemat0[,grep(c("M","F")[s],names(agemat0))]
nr <- length(na.omit(agemat0[,i]))
# agemat[1:nr,i] <- data.frame(na.omit(agemat0[,i])) ##if there is a value in one, should be in the other as well
# agemat[,i] <- bind_cols(data.frame(agemat), data.frame(na.omit(agemat0[,i])))
agemat[1:nr,i,s] <- matrix(na.omit(agemat0[,i]),ncol = 1)
lenmat[1:nr,i,s] <- matrix(na.omit(lenmat0[,i]),ncol = 1)
nmat[i] <- nr ## store lengths of each
# idx <- sample(1:nrow(temp),500) ## pick 500 rows and store index
# agemat[,i] <- temp[idx,] %>% as.matrix()
# lenmat[,i] <- data.frame(na.omit(lenmat0[,i]))[idx,] %>% as.matrix()
}
}
matrix(na.omit(agemat0[,i]),ncol = 1)
## omit NAs and select 500 from each strata
agemat <- lenmat <-  array(NA, dim = c(8481, length(unique(len$st)), 2))
## omit NAs and select 500 from each strata
agemat <- lenmat <-  array(NA, dim = c(8481, length(unique(len$st)), 2))
# matrix(NA, nrow = 8481, ncol = length(unique(len$st)))
nmat <- NULL
for(s in 1:2){
Atemp <- agemat0[,grep(c("M","F")[s],names(agemat0))]
Ltemp <- lenmat0[,grep(c("M","F")[s],names(lenmat0))]
for(i in 1:nStrata){
# idx <- (s-1)*6+i
nr <- length(na.omit(agemat0[,i]))
# agemat[1:nr,i] <- data.frame(na.omit(agemat0[,i])) ##if there is a value in one, should be in the other as well
# agemat[,i] <- bind_cols(data.frame(agemat), data.frame(na.omit(agemat0[,i])))
agemat[1:nr,i,s] <- matrix(na.omit(Atemp[,i]),ncol = 1)
lenmat[1:nr,i,s] <- matrix(na.omit(Ltemp[,i]),ncol = 1)
nmat[i] <- nr ## store lengths of each
# idx <- sample(1:nrow(temp),500) ## pick 500 rows and store index
# agemat[,i] <- temp[idx,] %>% as.matrix()
# lenmat[,i] <- data.frame(na.omit(lenmat0[,i]))[idx,] %>% as.matrix()
}
}
head(Atemp)
agemat0[,grep(c("M","F")[s],names(agemat0))]
agemat0 <-
len %>% filter(Sex != 'U') %>% select(Age, st, Sex) %>% mutate(ID = 1:nrow(.)) %>% melt(., id = c('st', 'ID',"Sex"),'Age') %>%
reshape::cast(., ID + value ~ st + Sex, fill = NA, drop= T) %>% select(-ID, -value)
agemat0[,grep(c("M","F")[s],names(agemat0))]
for(s in 1:2){
Atemp <- agemat0[,grep(c("M","F")[s],names(agemat0))]
Ltemp <- lenmat0[,grep(c("M","F")[s],names(lenmat0))]
for(i in 1:nStrata){
# idx <- (s-1)*6+i
nr <- length(na.omit(agemat0[,i]))
# agemat[1:nr,i] <- data.frame(na.omit(agemat0[,i])) ##if there is a value in one, should be in the other as well
# agemat[,i] <- bind_cols(data.frame(agemat), data.frame(na.omit(agemat0[,i])))
agemat[1:nr,i,s] <- matrix(na.omit(Atemp[,i]),ncol = 1)
lenmat[1:nr,i,s] <- matrix(na.omit(Ltemp[,i]),ncol = 1)
nmat[i] <- nr ## store lengths of each
# idx <- sample(1:nrow(temp),500) ## pick 500 rows and store index
# agemat[,i] <- temp[idx,] %>% as.matrix()
# lenmat[,i] <- data.frame(na.omit(lenmat0[,i]))[idx,] %>% as.matrix()
}
}
s
i
nr
na.omit(Atemp[,i]
)
dim(Atemp)
matrix(na.omit(Atemp[,i]),ncol = 1)
## omit NAs and select 500 from each strata
agemat <- lenmat <-  array(NA, dim = c(8481, length(unique(len$st)), 2))
for(s in 1:2){
Atemp <- agemat0[,grep(c("M","F")[s],names(agemat0))]
Ltemp <- lenmat0[,grep(c("M","F")[s],names(lenmat0))]
for(i in 1:nStrata){
# idx <- (s-1)*6+i
nr <- length(na.omit(Atemp[,i]))
# agemat[1:nr,i] <- data.frame(na.omit(agemat0[,i])) ##if there is a value in one, should be in the other as well
# agemat[,i] <- bind_cols(data.frame(agemat), data.frame(na.omit(agemat0[,i])))
agemat[1:nr,i,s] <- matrix(na.omit(Atemp[,i]),ncol = 1)
lenmat[1:nr,i,s] <- matrix(na.omit(Ltemp[,i]),ncol = 1)
nmat[i] <- nr ## store lengths of each
# idx <- sample(1:nrow(temp),500) ## pick 500 rows and store index
# agemat[,i] <- temp[idx,] %>% as.matrix()
# lenmat[,i] <- data.frame(na.omit(lenmat0[,i]))[idx,] %>% as.matrix()
}
}
head(agemat)
agemat
save(agemat, file = paste0(getwd(),"/agearray_WC.rda")); rm(agemat0)
save(lenmat, file = paste0(getwd(),"/lenarray__WC.rda")); rm(lenmat0)
require(TMB); require(dplyr); require(ggplot2); require(reshape)
options(scipen=999)
rm(list = ls())
## load data
setwd("C:/Users/mkapur/Dropbox/UW/sab-growth")
load( paste0(getwd(),"/filtered_SAB_WC.rda"));load( paste0(getwd(),"/nmat_WC.rda")); load(paste0(getwd(),"/lenarray_WC.rda")); load(paste0(getwd(),"/agearray_WC.rda")) ## made in dataprep
nStrata <- length(unique(len$st_f))
load( paste0(getwd(),"/filtered_SAB_WC.rda"));load( paste0(getwd(),"/nmat_WC.rda")); load(paste0(getwd(),"/lenarray_WC.rda")); load(paste0(getwd(),"/agearray_WC.rda")) ## made in dataprep
save(agemat, file = paste0(getwd(),"/agearray_WC.rda")); rm(agemat0)
agemat0 <-
len %>% filter(Sex != 'U') %>% select(Age, st, Sex) %>% mutate(ID = 1:nrow(.)) %>% melt(., id = c('st', 'ID',"Sex"),'Age') %>%
reshape::cast(., ID + value ~ st + Sex, fill = NA, drop= T) %>% select(-ID, -value)
lenmat0 <-
len %>% filter(Sex != 'U') %>% select(Length_cm, Sex, st) %>% mutate(ID = 1:nrow(.)) %>% melt(., id = c('st', 'ID',"Sex"),'Length_cm') %>%
reshape::cast(., ID + value ~ st + Sex, fill = NA, drop= T) %>% select(-ID, -value)
## omit NAs and select 500 from each strata
agemat <- lenmat <-  array(NA, dim = c(8481, length(unique(len$st)), 2))
# matrix(NA, nrow = 8481, ncol = length(unique(len$st)))
nmat <- NULL
for(s in 1:2){
Atemp <- agemat0[,grep(c("M","F")[s],names(agemat0))]
Ltemp <- lenmat0[,grep(c("M","F")[s],names(lenmat0))]
for(i in 1:nStrata){
# idx <- (s-1)*6+i
nr <- length(na.omit(Atemp[,i]))
# agemat[1:nr,i] <- data.frame(na.omit(agemat0[,i])) ##if there is a value in one, should be in the other as well
# agemat[,i] <- bind_cols(data.frame(agemat), data.frame(na.omit(agemat0[,i])))
agemat[1:nr,i,s] <- matrix(na.omit(Atemp[,i]),ncol = 1)
lenmat[1:nr,i,s] <- matrix(na.omit(Ltemp[,i]),ncol = 1)
nmat[i] <- nr ## store lengths of each
# idx <- sample(1:nrow(temp),500) ## pick 500 rows and store index
# agemat[,i] <- temp[idx,] %>% as.matrix()
# lenmat[,i] <- data.frame(na.omit(lenmat0[,i]))[idx,] %>% as.matrix()
}
}
save(agemat, file = paste0(getwd(),"/agearray_WC.rda")); rm(agemat0)
save(lenmat, file = paste0(getwd(),"/lenarray__WC.rda")); rm(lenmat0)
load( paste0(getwd(),"/filtered_SAB_WC.rda"));load( paste0(getwd(),"/nmat_WC.rda")); load(paste0(getwd(),"/lenarray_WC.rda")); load(paste0(getwd(),"/agearray_WC.rda")) ## made in dataprep
rm(Atemp)
rm(Ltemp)
parameters <-
list(
dummy = 0,
log_Linf = rep(log(70), nStrata),
log_k = rep(0, nStrata),
t0 = rep(0, nStrata),
log_Sigma = 1
)
compile("sptlvb.cpp")
dyn.load(dynlib("sptlvb"))
dat0 <- NULL ## later storage for preditcs
for(s in c(1,4)){ ## ultimately loop over 4 selectivities
data <-
list(
Length_cm = lenmat,
Age = agemat,
st = len[, 'st_f'],
nStrata = nStrata,
minSel = minSel,
maxSel = maxSel,
selType = s,
nmat = nmat
)
# Now estimate everything
map <- NULL
model <- MakeADFun(data, parameters,  DLL="sptlvb",silent=T,map=map)
fit <- nlminb(model$par, model$fn, model$gr, control = list(rel.tol = 1e-12, eval.max = 100000,iter.max = 10000), lower = 0.01)
# for (k in 1:3)  fit <- nlminb(model$env$last.par.best, model$fn, model$gr) ## start at last-best call, for stability
best <- model$env$last.par.best
print(c(best[1:6],exp(best[7:length(best)])))
print(fit$objective)
rep <- sdreport(model)
dat0 <- bind_cols(dat0, model$report()$ypreds %>% data.frame()) ## each 6 cols is new sim
}
minSel <- c(42, 37, 39, 27, 23, 21) ## cutoff values for selectivity
maxSel <- c(74, 70, 77, 71, 71, 63)
for(s in c(1,4)){ ## ultimately loop over 4 selectivities
data <-
list(
Length_cm = lenmat,
Age = agemat,
st = len[, 'st_f'],
nStrata = nStrata,
minSel = minSel,
maxSel = maxSel,
selType = s,
nmat = nmat
)
# Now estimate everything
map <- NULL
model <- MakeADFun(data, parameters,  DLL="sptlvb",silent=T,map=map)
fit <- nlminb(model$par, model$fn, model$gr, control = list(rel.tol = 1e-12, eval.max = 100000,iter.max = 10000), lower = 0.01)
# for (k in 1:3)  fit <- nlminb(model$env$last.par.best, model$fn, model$gr) ## start at last-best call, for stability
best <- model$env$last.par.best
print(c(best[1:6],exp(best[7:length(best)])))
print(fit$objective)
rep <- sdreport(model)
dat0 <- bind_cols(dat0, model$report()$ypreds %>% data.frame()) ## each 6 cols is new sim
}
nmat
for(s in 1:2){
Atemp <- agemat0[,grep(c("M","F")[s],names(agemat0))]
Ltemp <- lenmat0[,grep(c("M","F")[s],names(lenmat0))]
for(i in 1:nStrata){
# idx <- (s-1)*6+i
nr <- length(na.omit(Atemp[,i]))
# agemat[1:nr,i] <- data.frame(na.omit(agemat0[,i])) ##if there is a value in one, should be in the other as well
# agemat[,i] <- bind_cols(data.frame(agemat), data.frame(na.omit(agemat0[,i])))
agemat[1:nr,i,s] <- matrix(na.omit(Atemp[,i]),ncol = 1)
lenmat[1:nr,i,s] <- matrix(na.omit(Ltemp[,i]),ncol = 1)
nmat[i,s] <- nr ## store lengths of each
# idx <- sample(1:nrow(temp),500) ## pick 500 rows and store index
# agemat[,i] <- temp[idx,] %>% as.matrix()
# lenmat[,i] <- data.frame(na.omit(lenmat0[,i]))[idx,] %>% as.matrix()
}
}
emat0 <-
len %>% filter(Sex != 'U') %>% select(Age, st, Sex) %>% mutate(ID = 1:nrow(.)) %>% melt(., id = c('st', 'ID',"Sex"),'Age') %>%
reshape::cast(., ID + value ~ st + Sex, fill = NA, drop= T) %>% select(-ID, -value)
lenmat0 <-
len %>% filter(Sex != 'U') %>% select(Length_cm, Sex, st) %>% mutate(ID = 1:nrow(.)) %>% melt(., id = c('st', 'ID',"Sex"),'Length_cm') %>%
reshape::cast(., ID + value ~ st + Sex, fill = NA, drop= T) %>% select(-ID, -value)
## omit NAs and select 500 from each strata
agemat <- lenmat <-  array(NA, dim = c(8481, length(unique(len$st)), 2))
# matrix(NA, nrow = 8481, ncol = length(unique(len$st)))
nmat <- NULL
for(s in 1:2){
Atemp <- agemat0[,grep(c("M","F")[s],names(agemat0))]
Ltemp <- lenmat0[,grep(c("M","F")[s],names(lenmat0))]
for(i in 1:nStrata){
# idx <- (s-1)*6+i
nr <- length(na.omit(Atemp[,i]))
# agemat[1:nr,i] <- data.frame(na.omit(agemat0[,i])) ##if there is a value in one, should be in the other as well
# agemat[,i] <- bind_cols(data.frame(agemat), data.frame(na.omit(agemat0[,i])))
agemat[1:nr,i,s] <- matrix(na.omit(Atemp[,i]),ncol = 1)
lenmat[1:nr,i,s] <- matrix(na.omit(Ltemp[,i]),ncol = 1)
nmat[i,s] <- nr ## store lengths of each
# idx <- sample(1:nrow(temp),500) ## pick 500 rows and store index
# agemat[,i] <- temp[idx,] %>% as.matrix()
# lenmat[,i] <- data.frame(na.omit(lenmat0[,i]))[idx,] %>% as.matrix()
}
}
agemat0 <-
len %>% filter(Sex != 'U') %>% select(Age, st, Sex) %>% mutate(ID = 1:nrow(.)) %>% melt(., id = c('st', 'ID',"Sex"),'Age') %>%
reshape::cast(., ID + value ~ st + Sex, fill = NA, drop= T) %>% select(-ID, -value)
lenmat0 <-
len %>% filter(Sex != 'U') %>% select(Length_cm, Sex, st) %>% mutate(ID = 1:nrow(.)) %>% melt(., id = c('st', 'ID',"Sex"),'Length_cm') %>%
reshape::cast(., ID + value ~ st + Sex, fill = NA, drop= T) %>% select(-ID, -value)
## omit NAs and select 500 from each strata
agemat <- lenmat <-  array(NA, dim = c(8481, length(unique(len$st)), 2))
# matrix(NA, nrow = 8481, ncol = length(unique(len$st)))
nmat <- NULL
for(s in 1:2){
Atemp <- agemat0[,grep(c("M","F")[s],names(agemat0))]
Ltemp <- lenmat0[,grep(c("M","F")[s],names(lenmat0))]
for(i in 1:nStrata){
# idx <- (s-1)*6+i
nr <- length(na.omit(Atemp[,i]))
# agemat[1:nr,i] <- data.frame(na.omit(agemat0[,i])) ##if there is a value in one, should be in the other as well
# agemat[,i] <- bind_cols(data.frame(agemat), data.frame(na.omit(agemat0[,i])))
agemat[1:nr,i,s] <- matrix(na.omit(Atemp[,i]),ncol = 1)
lenmat[1:nr,i,s] <- matrix(na.omit(Ltemp[,i]),ncol = 1)
nmat[i,s] <- nr ## store lengths of each
# idx <- sample(1:nrow(temp),500) ## pick 500 rows and store index
# agemat[,i] <- temp[idx,] %>% as.matrix()
# lenmat[,i] <- data.frame(na.omit(lenmat0[,i]))[idx,] %>% as.matrix()
}
}
# matrix(NA, nrow = 8481, ncol = length(unique(len$st)))
nmat <- NULL
for(s in 1:2){
Atemp <- agemat0[,grep(c("M","F")[s],names(agemat0))]
Ltemp <- lenmat0[,grep(c("M","F")[s],names(lenmat0))]
for(i in 1:nStrata){
# idx <- (s-1)*6+i
nr <- length(na.omit(Atemp[,i]))
# agemat[1:nr,i] <- data.frame(na.omit(agemat0[,i])) ##if there is a value in one, should be in the other as well
# agemat[,i] <- bind_cols(data.frame(agemat), data.frame(na.omit(agemat0[,i])))
agemat[1:nr,i,s] <- matrix(na.omit(Atemp[,i]),ncol = 1)
lenmat[1:nr,i,s] <- matrix(na.omit(Ltemp[,i]),ncol = 1)
nmat[i,s] <- nr ## store lengths of each
# idx <- sample(1:nrow(temp),500) ## pick 500 rows and store index
# agemat[,i] <- temp[idx,] %>% as.matrix()
# lenmat[,i] <- data.frame(na.omit(lenmat0[,i]))[idx,] %>% as.matrix()
}
}
nmat
# matrix(NA, nrow = 8481, ncol = length(unique(len$st)))
nmat <- matrix(NA, nrow = nStrata, ncol = 2)
for(s in 1:2){
Atemp <- agemat0[,grep(c("M","F")[s],names(agemat0))]
Ltemp <- lenmat0[,grep(c("M","F")[s],names(lenmat0))]
for(i in 1:nStrata){
# idx <- (s-1)*6+i
nr <- length(na.omit(Atemp[,i]))
# agemat[1:nr,i] <- data.frame(na.omit(agemat0[,i])) ##if there is a value in one, should be in the other as well
# agemat[,i] <- bind_cols(data.frame(agemat), data.frame(na.omit(agemat0[,i])))
agemat[1:nr,i,s] <- matrix(na.omit(Atemp[,i]),ncol = 1)
lenmat[1:nr,i,s] <- matrix(na.omit(Ltemp[,i]),ncol = 1)
nmat[i,s] <- nr ## store lengths of each
# idx <- sample(1:nrow(temp),500) ## pick 500 rows and store index
# agemat[,i] <- temp[idx,] %>% as.matrix()
# lenmat[,i] <- data.frame(na.omit(lenmat0[,i]))[idx,] %>% as.matrix()
}
}
nmat
save(nmat, file = paste0(getwd(),"/nmat_WC.rda")); rm(lenmat0)
