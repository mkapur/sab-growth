head(dat0)
## plotting ----
# names(dat0) <- paste0(unique(len$st_f))
# names(dat0) <- paste0(c(rep('uniform_',6),rep('min_',6),rep('max_',6)),paste0(unique(len$st_f)))
names(dat0) <- paste0(c(rep('uniform_',6),rep('dome',6)),paste0(unique(len$st_f)))
dat0 <- dat0 %>% reshape::melt() %>% plyr::rename(c('value' = 'Predicted', 'variable' = 'st'))
head(dat0)
test <- "uniform_deep_s"
strsplit(st, '_')[1])
strsplit(st, '_')[1]
strsplit(test, '_')[1]
strsplit(test, '_')[[1]][2]
strsplit(test, '(_)(?=[^_]+$)', perl=TRUE)
sub('_.*$','', test)
dat0 <- dat0 %>% reshape::melt() %>% plyr::rename(c('value' = 'Predicted', 'variable' = 'st')) %>% mutate(model = sub('_.*$','', st))
for(s in c(1,4)){ ## ultimately loop over 4 selectivities
data <-
list(
Length_cm = lenmat,
Age = agemat,
st = len[, 'st_f'],
nStrata = nStrata,
minSel = minSel,
maxSel = maxSel,
selType = s
)
# Now estimate everything
map <- NULL
model <- MakeADFun(data, parameters,  DLL="sptlvb",silent=T,map=map)
fit <- nlminb(model$par, model$fn, model$gr, control = list(rel.tol = 1e-12, eval.max = 100000,iter.max = 10000), lower = 0.01)
# for (k in 1:3)  fit <- nlminb(model$env$last.par.best, model$fn, model$gr) ## start at last-best call, for stability
best <- model$env$last.par.best
print(c(best[1:6],exp(best[7:length(best)])))
print(fit$objective)
rep <- sdreport(model)
dat0 <- bind_cols(dat0, model$report()$ypreds %>% data.frame()) ## each 6 cols is new sim
}
rm(dat0)
dat0 <- NULL ## later storage for preditcs
for(s in c(1,4)){ ## ultimately loop over 4 selectivities
data <-
list(
Length_cm = lenmat,
Age = agemat,
st = len[, 'st_f'],
nStrata = nStrata,
minSel = minSel,
maxSel = maxSel,
selType = s
)
# Now estimate everything
map <- NULL
model <- MakeADFun(data, parameters,  DLL="sptlvb",silent=T,map=map)
fit <- nlminb(model$par, model$fn, model$gr, control = list(rel.tol = 1e-12, eval.max = 100000,iter.max = 10000), lower = 0.01)
# for (k in 1:3)  fit <- nlminb(model$env$last.par.best, model$fn, model$gr) ## start at last-best call, for stability
best <- model$env$last.par.best
print(c(best[1:6],exp(best[7:length(best)])))
print(fit$objective)
rep <- sdreport(model)
dat0 <- bind_cols(dat0, model$report()$ypreds %>% data.frame()) ## each 6 cols is new sim
}
dat0 %>% reshape::melt() %>% plyr::rename(c('value' = 'Predicted', 'variable' = 'st')) %>% mutate(model = sub('_.*$','', st))
head(dat0)
## plotting ----
# names(dat0) <- paste0(unique(len$st_f))
# names(dat0) <- paste0(c(rep('uniform_',6),rep('min_',6),rep('max_',6)),paste0(unique(len$st_f)))
names(dat0) <- paste0(c(rep('uniform_',6),rep('dome',6)),paste0(unique(len$st_f)))
dat0 %>% reshape::melt() %>% plyr::rename(c('value' = 'Predicted', 'variable' = 'st')) %>% mutate(model = sub('_.*$','', st))
sub('*_','', test)
sub('*_$','', test)
sub('*_.','', test)
sub('.*_','', test)
sub('._','', test)
sub('.$_','', test)
sub('._*','', test)
sub('.$_*','', test)
sub('.$_$*','', test)
sub(".*_ *(.*?) *_*", "\\1", test)
sub(".*_ *(.*?)", "\\1", test)
dat0 %>% reshape::melt() %>% plyr::rename(c('value' = 'Predicted', 'variable' = 'ID')) %>% mutate(model = sub('_.*$','', ID), st = sub(".*_ *(.*?)", "\\1", ID))
dat0 <- dat0 %>% reshape::melt() %>% plyr::rename(c('value' = 'Predicted', 'variable' = 'ID')) %>% mutate(model = sub('_.*$','', ID), st = sub(".*_ *(.*?)", "\\1", ID))
dat0$st_f <- factor(dat0$st, levels=c('deep_n','mid_n','shallow_n','deep_s', "mid_s","shallow_s"))
agedf <- agemat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Age'))
lendf <- lenmat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Length'))
bind_cols(dat0,agedf,lendf)
head(dat0)
dim(dat0)
head(agedf)
nrow(dat0)/nrow(agedf)
View(lendf)
bind_cols(dat0,rep(agedf$Age, nrow(dat0)/nrow(agedf)),rep(lendf$Length_cm, nrow(dat0)/nrow(lendf)))
rep(agedf$Age, nrow(dat0)/nrow(agedf))
agedf
rep(agedf, nrow(dat0)/nrow(agedf))
rbind(rep(agedf, nrow(dat0)/nrow(agedf)))
agedf
rep(agedf,2)
bind_cols(rep(agedf,2))
bind_rows(rep(agedf,2))
bind_rows(rep(agemat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Age')), nrow(.)/nrow(dat0)))
agedf <- bind_rows(rep(agemat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Age')), nrow(dat0)/500))
agedf
agedf <- bind_rows(rep(agemat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Age')), nrow(dat0)/500))
lendf <- bind_rows(rep(lenmat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Length')), nrow(dat0)/500))
bind_cols(dat0, agedf, lendf)
nrow(agemat)
dim(agedf)
dim(dat0)
nrow(dat0)/500
agemat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Age'))
agedf <- bind_rows(rep(agemat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Age')), nrow(dat0)/(nStrata*500)))
lendf <- bind_rows(rep(lenmat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Length')), nrow(dat0)/(nStrata*500)))
mdf <- bind_cols(dat0, agedf, lendf) %>% select(-variable, -variable1, -st)
nrow(dat0)/(nStrata*500)
dim(agemat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Age')))
dim(rep(agemat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Age')), nrow(dat0)/(nStrata*500)))
dim(bind_rows(rep(agemat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Age')), nrow(dat0)/(nStrata*500))))
rep(agemat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Age')), nrow(dat0)/(nStrata*500))
agedf
agedf <- bind_rows(rep(agemat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Age')), nrow(dat0)/(nStrata*500)))
dim(agedf)
dim(agemat)
dim(agemat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Age')))
cbind(rep(agemat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Age')),2))
rbind(rep(agemat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Age')),2))
agemat
dim(dat0)
agemat %>% data.frame() %>% reshape::melt() %>% head()
agemat %>% data.frame() %>% reshape::melt() %>% head() %>% plyr::rename(c('variable' = 'model', "value" = "Age"))
lenmat %>% data.frame() %>% reshape::melt() %>% head() %>% plyr::rename(c("value" = "Length")) %>% select(-variable) %>% mutate(model = 'observed')
agedf <- agemat %>% data.frame() %>% reshape::melt() %>% head() %>% plyr::rename(c("value" = "Age")) %>% select(-variable) %>% mutate(model = 'observed')
lendf <- lenmat %>% data.frame() %>% reshape::melt() %>% head() %>% plyr::rename(c("value" = "Length")) %>% select(-variable) %>% mutate(model = 'observed')
dim(agedf)
agedf <- agemat %>% data.frame() %>% reshape::melt()  %>% plyr::rename(c("value" = "Age")) %>% select(-variable) %>% mutate(model = 'observed')
lendf <- lenmat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c("value" = "Length")) %>% select(-variable) %>% mutate(model = 'observed')
mdf <- bind_rows(dat0, agedf, lendf) %>% select(-variable, -variable1, -st)
bind_rows(dat0, agedf, lendf)
head( bind_rows(dat0, agedf, lendf))
rm(dat0)
for(s in c(1,4)){ ## ultimately loop over 4 selectivities
data <-
list(
Length_cm = lenmat,
Age = agemat,
st = len[, 'st_f'],
nStrata = nStrata,
minSel = minSel,
maxSel = maxSel,
selType = s
)
# Now estimate everything
map <- NULL
model <- MakeADFun(data, parameters,  DLL="sptlvb",silent=T,map=map)
fit <- nlminb(model$par, model$fn, model$gr, control = list(rel.tol = 1e-12, eval.max = 100000,iter.max = 10000), lower = 0.01)
# for (k in 1:3)  fit <- nlminb(model$env$last.par.best, model$fn, model$gr) ## start at last-best call, for stability
best <- model$env$last.par.best
print(c(best[1:6],exp(best[7:length(best)])))
print(fit$objective)
rep <- sdreport(model)
dat0 <- bind_cols(dat0, model$report()$ypreds %>% data.frame()) ## each 6 cols is new sim
}
dat0 <- NULL ## later storage for preditcs
for(s in c(1,4)){ ## ultimately loop over 4 selectivities
data <-
list(
Length_cm = lenmat,
Age = agemat,
st = len[, 'st_f'],
nStrata = nStrata,
minSel = minSel,
maxSel = maxSel,
selType = s
)
# Now estimate everything
map <- NULL
model <- MakeADFun(data, parameters,  DLL="sptlvb",silent=T,map=map)
fit <- nlminb(model$par, model$fn, model$gr, control = list(rel.tol = 1e-12, eval.max = 100000,iter.max = 10000), lower = 0.01)
# for (k in 1:3)  fit <- nlminb(model$env$last.par.best, model$fn, model$gr) ## start at last-best call, for stability
best <- model$env$last.par.best
print(c(best[1:6],exp(best[7:length(best)])))
print(fit$objective)
rep <- sdreport(model)
dat0 <- bind_cols(dat0, model$report()$ypreds %>% data.frame()) ## each 6 cols is new sim
}
## plotting ----
# names(dat0) <- paste0(unique(len$st_f))
# names(dat0) <- paste0(c(rep('uniform_',6),rep('min_',6),rep('max_',6)),paste0(unique(len$st_f)))
names(dat0) <- paste0(c(rep('uniform_',6),rep('dome',6)),paste0(unique(len$st_f)))
# dat0 <- dat0 %>% reshape::melt() %>% plyr::rename(c('value' = 'Predicted', 'variable' = 'ID')) %>% mutate(model = sub('_.*$','', ID), st = sub(".*_ *(.*?)", "\\1", ID))
dat0$st_f <- factor(dat0$st, levels=c('deep_n','mid_n','shallow_n','deep_s', "mid_s","shallow_s"))
head(dat)
head(dat0)
## plotting ----
# names(dat0) <- paste0(unique(len$st_f))
# names(dat0) <- paste0(c(rep('uniform_',6),rep('min_',6),rep('max_',6)),paste0(unique(len$st_f)))
names(dat0) <- paste0(c(rep('uniform_',6),rep('dome_',6)),paste0(unique(len$st_f)))
head(agemat)
head(agedf)
nrow(dat0)
head(bind_rows(dat0, agedf[,'Age'], lendf[,'Length']))
agedf$Age
head(bind_rows(dat0, agedf, lendf) )
head(age)
head(agedf)
l
tail(bind_rows(dat0, agedf, lendf) )
agedf <- agemat %>% data.frame() %>% reshape::melt()  %>% plyr::rename(c("value" = "Age")) %>% select(-variable) #%>% mutate(model = 'observed')
lendf <- lenmat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c("value" = "Length")) %>% select(-variable)# %>% mutate(model = 'observed')
bind_rows(dat0, agedf, lendf)
mdf <- bind_cols(dat0, agedf, lendf) %>% select(-ID, -variable1, -st)
dim(dat0)
dim(agedf)
agedf <- agemat %>% data.frame() #%>% reshape::melt()  %>% plyr::rename(c("value" = "Age")) %>% select(-variable) #%>% mutate(model = 'observed')
lendf <- lenmat %>% data.frame() #%>% reshape::melt() %>% plyr::rename(c("value" = "Length")) %>% select(-variable)# %>% mutate(model = 'observed')
bind_cols(dat0, agedf, lendf)
agedf <- agemat %>% data.frame() #%>% reshape::melt()  %>% plyr::rename(c("value" = "Age")) %>% select(-variable) #%>% mutate(model = 'observed')
names(agedf) <- paste0(c(rep('Age',6)),paste0(unique(len$st_f)))
lendf <- lenmat %>% data.frame() #%>% reshape::melt() %>% plyr::rename(c("value" = "Length")) %>% select(-variable)# %>% mutate(model = 'observed')
names(lendf) <- paste0(c(rep('Length',6)),paste0(unique(len$st_f)))
head(bind_cols(dat0, agedf, lendf))
agedf <- agemat %>% data.frame() #%>% reshape::melt()  %>% plyr::rename(c("value" = "Age")) %>% select(-variable) #%>% mutate(model = 'observed')
names(agedf) <- paste0(c(rep('Age_',6)),paste0(unique(len$st_f)))
lendf <- lenmat %>% data.frame() #%>% reshape::melt() %>% plyr::rename(c("value" = "Length")) %>% select(-variable)# %>% mutate(model = 'observed')
names(lendf) <- paste0(c(rep('Length_',6)),paste0(unique(len$st_f)))
bind_cols(dat0, agedf, lendf) %>% reshape::melt() %>% head() plyr::rename(c('value' = 'Predicted', 'variable' = 'ID')) %>% mutate(model = sub('_.*$','', ID), st = sub(".*_ *(.*?)", "\\1", ID))#%>% select(-ID, -variable1, -st)
bind_cols(dat0, agedf, lendf) %>% reshape::melt() %>% head()
bind_cols(dat0, agedf, lendf) %>% reshape::melt()  %>% plyr::rename(c( 'variable' = 'ID')) %>% mutate(model = sub('_.*$','', ID), st = sub(".*_ *(.*?)", "\\1", ID)) %>% head() #%>% select(-ID, -variable1, -st)
bind_cols(dat0, agedf, lendf) %>% reshape::melt(id = c(paste0(c(rep('Age_',6)),paste0(unique(len$st_f))))  %>% plyr::rename(c( 'variable' = 'ID')) %>% mutate(model = sub('_.*$','', ID), st = sub(".*_ *(.*?)", "\\1", ID)) %>% head() #%>% select(-ID, -variable1, -st)
bind_cols(dat0, agedf, lendf) %>% reshape::melt(id = c(paste0(c(rep('Age_',6)),paste0(unique(len$st_f)))))  %>% plyr::rename(c( 'variable' = 'ID')) %>% mutate(model = sub('_.*$','', ID), st = sub(".*_ *(.*?)", "\\1", ID)) %>% head() #%>% select(-ID, -variable1, -st)
agedf <- agemat %>% data.frame() %>% reshape::melt()  %>% plyr::rename(c("value" = "Age")) %>% select(-variable) %>% mutate(model = 'observed')
agedf
bind_cols(dat0,  lendf) %>% reshape::melt()  %>% plyr::rename(c( 'variable' = 'ID')) %>%
mutate(model = sub('_.*$','', ID), st = sub(".*_ *(.*?)", "\\1", ID), age = agedf) %>% head() #%>% select(-ID, -variable1, -st)
agedf <- agemat  %>% reshape::melt()  %>% plyr::rename(c("value" = "Age")) %>% select(-variable) # %>% mutate(model = 'observed')
agemat  %>% reshape::melt()
bind_cols(dat0,  lendf) %>% reshape::melt()  %>% plyr::rename(c( 'variable' = 'ID')) %>%
mutate(model = sub('_.*$','', ID), st = sub(".*_ *(.*?)", "\\1", ID), age = agedf$age) %>% head() #%>% select(-ID, -variable1, -st)
bind_cols(dat0,  lendf) %>% reshape::melt()  %>% plyr::rename(c( 'variable' = 'ID')) %>%
mutate(model = sub('_.*$','', ID), st = sub(".*_ *(.*?)", "\\1", ID), age = agedf$Age) %>% head() #%>% select(-ID, -variable1, -st)
bind_cols(dat0,  lendf) %>% reshape::melt()  %>% plyr::rename(c( 'variable' = 'ID'))
dim(agedf)
bind_cols(dat0,  lendf) %>% reshape::melt()  %>% plyr::rename(c( 'variable' = 'ID')) %>%
mutate(model = sub('_.*$','', ID), st = sub(".*_ *(.*?)", "\\1", ID), age = rep(agedf$Age,3)) %>% head() #%>% select(-ID, -variable1, -st)
bind_cols(dat0,  lendf) %>% reshape::melt()  %>% plyr::rename(c( 'variable' = 'ID')) %>%
mutate(model = sub('_.*$','', ID), st = sub(".*_ *(.*?)", "\\1", ID), age = rep(agedf$Age,3)) %>% head() %>% select(-ID)
mdf<-bind_cols(dat0,  lendf) %>% reshape::melt()  %>% plyr::rename(c( 'variable' = 'ID', 'value' = 'Length')) %>%
mutate(model = sub('_.*$','', ID), st = sub(".*_ *(.*?)", "\\1", ID), age = rep(agedf$Age,3)) %>% head() %>% select(-ID)
mdf$st_f = factor(mdf$variable, levels=c('deep_n','mid_n','shallow_n','deep_s', "mid_s","shallow_s"))
mdf$st_f = factor(mdf$st, levels=c('deep_n','mid_n','shallow_n','deep_s', "mid_s","shallow_s"))
ggplot(mdf, aes(x = Age, y = Length)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
geom_point(alpha = 0.2) +
geom_line(aes(y = Predicted), color = 'blue', lwd = 1.1)+
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits with Uniform Selectivity", y = 'Length (cm)', x= 'Age (yr)', subtitle = 'Points are actual subsampled data used in parameter fitting')
head(mdf)
agedf <- agemat  %>% data.frame() %>% reshape::melt()  %>% plyr::rename(c("value" = "Age")) %>% select(-variable) # %>% mutate(model = 'observed')
# names(agedf) <- paste0(c(rep('Age_',6)),paste0(unique(len$st_f)))
lendf <- lenmat %>% data.frame() #%>% reshape::melt() %>% plyr::rename(c("value" = "Length")) %>% select(-variable)# %>% mutate(model = 'observed')
names(lendf) <- paste0(c(rep('Length_',6)),paste0(unique(len$st_f)))
# agedf <- bind_rows(rep(agemat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Age')), nrow(dat0)/(nStrata*500)))
# lendf <- bind_rows(rep(lenmat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Length')), nrow(dat0)/(nStrata*500)))
mdf<-bind_cols(dat0,  lendf) %>% reshape::melt()  %>% plyr::rename(c( 'variable' = 'ID', 'value' = 'Length')) %>%
mutate(model = sub('_.*$','', ID), st = sub(".*_ *(.*?)", "\\1", ID), age = rep(agedf$Age,3))  %>% select(-ID)
mdf$st_f = factor(mdf$st, levels=c('deep_n','mid_n','shallow_n','deep_s', "mid_s","shallow_s"))
# save(mdf,file =  paste0(getwd(),"/uniform_predicts.rda"))
names(mdf)
ggplot(mdf, aes(x = age, y = Length)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
geom_point(alpha = 0.2) +
geom_line(aes(y = Predicted), color = 'blue', lwd = 1.1)+
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits with Uniform Selectivity", y = 'Length (cm)', x= 'Age (yr)', subtitle = 'Points are actual subsampled data used in parameter fitting')
ggplot(mdf, aes(x = age, y = Length, fill = model)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
geom_point(alpha = 0.2) +
geom_line( lwd = 1.1)+
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits with Uniform Selectivity", y = 'Length (cm)', x= 'Age (yr)', subtitle = 'Points are actual subsampled data used in parameter fitting')
unique(mdf$model)
ggplot(subset(mdf, model == 'Length'), aes(x = age, y = Length, fill = model)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), lwd = 1.1)+
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits with Uniform Selectivity", y = 'Length (cm)', x= 'Age (yr)', subtitle = 'Points are actual subsampled data used in parameter fitting')
ggplot(subset(mdf, model == 'Length'), aes(x = age, y = Length)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, fill = model), lwd = 1.1)+
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits with Uniform Selectivity", y = 'Length (cm)', x= 'Age (yr)', subtitle = 'Points are actual subsampled data used in parameter fitting')
ggplot(subset(mdf, model == 'Length'), aes(x = age, y = Length)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1)+
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits with Uniform Selectivity", y = 'Length (cm)', x= 'Age (yr)', subtitle = 'Points are actual subsampled data used in parameter fitting')
ggplot(len, aes(x = Age, y = Length_cm, color = Sex)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
scale_color_brewer(palette = 'Dark2') +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1)+
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits with Uniform Selectivity", y = 'Length (cm)', x= 'Age (yr)', subtitle = 'Parameters estimated using subset of each strata')
ggplot(len, aes(x = Age, y = Length_cm, color = Sex)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
scale_color_brewer(palette = 'Blues') +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1)+
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits with Uniform Selectivity", y = 'Length (cm)', x= 'Age (yr)', subtitle = 'Parameters estimated using subset of each strata')
ggplot(len, aes(x = Age, y = Length_cm, color = Sex)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
# scale_color_brewer(palette = 'Dark2') +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1)+
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits with Uniform Selectivity", y = 'Length (cm)', x= 'Age (yr)', subtitle = 'Parameters estimated using subset of each strata')
ggplot(len, aes(x = Age, y = Length_cm, color = Sex)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
# scale_color_brewer(palette = 'Dark2') +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1)+
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits with Uniform Selectivity", y = 'Length (cm)', x= 'Age (yr)', subtitle = 'Parameters estimated using subset of each strata, not sex-specific')
ggsave(file = paste0(getwd(),"/plots/dome_uni_fits2.png"), plot = last_plot(), height = 5, width = 7, unit = 'in', dpi = 520)
ggsave(file = paste0(getwd(),"/plots/dome_uni_fits1.png"), plot = last_plot(), height = 5, width = 7, unit = 'in', dpi = 520)
ggplot(subset(mdf, model == 'Length'), aes(x = age, y = Length)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1)+
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits with Uniform Selectivity", y = 'Length (cm)', x= 'Age (yr)', subtitle = 'Points are actual subsampled data used in parameter fitting')
ggplot(len, aes(x = Age, y = Length_cm)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
# scale_color_brewer(palette = 'Dark2') +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1)+
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits with Uniform Selectivity",
y = 'Length (cm)', x= 'Age (yr)',
subtitle = 'Parameters estimated using subset of each strata, not sex-specific',
color = 'selectivity model')
ggplot(len, aes(x = Age, y = Length_cm)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
# scale_color_brewer(palette = 'Dark2') +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1)+
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits and Raw Data",
y = 'Length (cm)', x= 'Age (yr)',
subtitle = 'Parameters estimated using subset of each strata, not sex-specific',
color = 'selectivity model')
ggplot(subset(mdf, model == 'Length'), aes(x = age, y = Length)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1)+
facet_wrap(~ st_f) +
labs(
title = "Predicted Model Fits and Subsampled Data",
y = 'Length (cm)',
x = 'Age (yr)',
subtitle = 'Points are actual subsampled data used in parameter fitting',
color = 'selectivity model'
)
ggsave(file = paste0(getwd(),"/plots/dome_uni_fits1.png"), plot = last_plot(), height = 5, width = 7, unit = 'in', dpi = 520)
ggplot(len, aes(x = Age, y = Length_cm)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
# scale_color_brewer(palette = 'Dark2') +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1)+
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits and Raw Data",
y = 'Length (cm)', x= 'Age (yr)',
subtitle = 'Parameters estimated using subset of each strata, not sex-specific',
color = 'selectivity model')
ggsave(file = paste0(getwd(),"/plots/dome_uni_fits2.png"), plot = last_plot(), height = 5, width = 7, unit = 'in', dpi = 520)
require(TMB); require(dplyr); require(ggplot2); require(reshape)
options(scipen=999)
## load data
setwd("C:/Users/mkapur/Dropbox/UW/sab-growth")
load( paste0(getwd(),"/filtered_SAB_WC.rda")); load(paste0(getwd(),"/lenmat_WC.rda")); load(paste0(getwd(),"/agemat_WC.rda")) ## made in dataprep
nStrata <- length(unique(len$st_f))
## Estimation
s <- c(1:4)[1] ## choose between uniform, min, max, or dome selectivity
minSel <- c(42, 37, 39, 27, 23, 21) ## cutoff values for selectivity
maxSel <- c(74, 70, 77, 71, 71, 63)
parameters <-
list(
dummy = 0,
log_Linf = rep(log(70), nStrata),
log_k = rep(0, nStrata),
t0 = rep(0, nStrata),
log_Sigma = 1
)
compile("sptlvb.cpp")
dyn.load(dynlib("sptlvb"))
dat0 <- NULL ## later storage for preditcs
for(s in c(1,4)){ ## ultimately loop over 4 selectivities
data <-
list(
Length_cm = lenmat,
Age = agemat,
st = len[, 'st_f'],
nStrata = nStrata,
minSel = minSel,
maxSel = maxSel,
selType = s
)
# Now estimate everything
map <- NULL
model <- MakeADFun(data, parameters,  DLL="sptlvb",silent=T,map=map)
fit <- nlminb(model$par, model$fn, model$gr, control = list(rel.tol = 1e-12, eval.max = 100000,iter.max = 10000), lower = 0.01)
# for (k in 1:3)  fit <- nlminb(model$env$last.par.best, model$fn, model$gr) ## start at last-best call, for stability
best <- model$env$last.par.best
print(c(best[1:6],exp(best[7:length(best)])))
print(fit$objective)
rep <- sdreport(model)
dat0 <- bind_cols(dat0, model$report()$ypreds %>% data.frame()) ## each 6 cols is new sim
}
## plotting ----
# names(dat0) <- paste0(unique(len$st_f))
# names(dat0) <- paste0(c(rep('uniform_',6),rep('min_',6),rep('max_',6)),paste0(unique(len$st_f)))
names(dat0) <- paste0(c(rep('uniform_',6),rep('dome_',6)),paste0(unique(len$st_f)))
# dat0 <- dat0 %>% reshape::melt() %>% plyr::rename(c('value' = 'Predicted', 'variable' = 'ID')) %>% mutate(model = sub('_.*$','', ID), st = sub(".*_ *(.*?)", "\\1", ID))
# dat0$st_f <- factor(dat0$st, levels=c('deep_n','mid_n','shallow_n','deep_s', "mid_s","shallow_s"))
agedf <- agemat  %>% data.frame() %>% reshape::melt()  %>% plyr::rename(c("value" = "Age")) %>% select(-variable) # %>% mutate(model = 'observed')
# names(agedf) <- paste0(c(rep('Age_',6)),paste0(unique(len$st_f)))
lendf <- lenmat %>% data.frame() #%>% reshape::melt() %>% plyr::rename(c("value" = "Length")) %>% select(-variable)# %>% mutate(model = 'observed')
names(lendf) <- paste0(c(rep('Length_',6)),paste0(unique(len$st_f)))
# agedf <- bind_rows(rep(agemat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Age')), nrow(dat0)/(nStrata*500)))
# lendf <- bind_rows(rep(lenmat %>% data.frame() %>% reshape::melt() %>% plyr::rename(c('value' = 'Length')), nrow(dat0)/(nStrata*500)))
mdf<-bind_cols(dat0,  lendf) %>% reshape::melt()  %>% plyr::rename(c( 'variable' = 'ID', 'value' = 'Length')) %>%
mutate(model = sub('_.*$','', ID), st = sub(".*_ *(.*?)", "\\1", ID), age = rep(agedf$Age,3))  %>% select(-ID)
mdf$st_f = factor(mdf$st, levels=c('deep_n','mid_n','shallow_n','deep_s', "mid_s","shallow_s"))
# save(mdf,file =  paste0(getwd(),"/uniform_predicts.rda"))
ggplot(subset(mdf, model == 'Length'), aes(x = age, y = Length)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1)+
facet_wrap(~ st_f) +
labs(
title = "Predicted Model Fits and Subsampled Data",
y = 'Length (cm)',
x = 'Age (yr)',
subtitle = 'Points are actual subsampled data used in parameter fitting',
color = 'selectivity model'
)
ggsave(file = paste0(getwd(),"/plots/dome_uni_fits1.png"), plot = last_plot(), height = 5, width = 7, unit = 'in', dpi = 520)
ggplot(len, aes(x = Age, y = Length_cm)) +
theme_minimal() +
theme(panel.grid = element_blank(), legend.position = c(0.9,0.15))+
scale_y_continuous(limits = c(0,100)) +
scale_x_continuous(limits = c(0,50)) +
# scale_color_brewer(palette = 'Dark2') +
geom_point(alpha = 0.2) +
geom_line(data = subset(mdf, model != 'Length'), aes(x = age, y = Length, color = model), lwd = 1.1)+
facet_wrap(~ st_f) +
labs(title = "Predicted Model Fits and Raw Data",
y = 'Length (cm)', x= 'Age (yr)',
subtitle = 'Parameters estimated using subset of each strata, not sex-specific',
color = 'selectivity model')
ggsave(file = paste0(getwd(),"/plots/dome_uni_fits2.png"), plot = last_plot(), height = 5, width = 7, unit = 'in', dpi = 520)
