scale_y_continuous(limits = c(125,450)) +
geom_point(aes(size = Length_cm, fill = Length_cm), shape = 21, alpha = 0.7) +
scale_fill_viridis_c(guide = "legend") +
scale_size_continuous(range = c(1, 15)) +
labs(x = 'Year', y = 'Length of Age Six Fish (cm)',
fill = "Length of Age-6 Fish (cm)",size  = "Length of Age-6 Fish (cm)",
title = paste0(scens.title0[i], ' Raw Data')) +
geom_label(x = 10, y = 400, label = paste0('n = ',nrow(tempdf)),
size = 4, fill = 'white')
idx0 <- idx0+1
}
ggsave(plot = last_plot(),  file = paste0("./figures/rawdat_",scen,".png"),
width = 5, height = 5, units = 'in', dpi = 480)
## map showing new breaks
plist[[idx]] <- ggplot(tempdf, aes(x = Latitude_dd, y = Longitude_dd)) +
theme_classic() +
theme(legend.position = 'right') +
scale_y_continuous(limits = c(0,50), breaks = seq(0,50,10)) +
geom_point(aes(size = Length_cm, fill = Length_cm), shape = 21, alpha = 0.7) +
scale_fill_viridis_c(guide = "legend") +
scale_size_continuous(range = c(1, 15)) +
labs(x = 'Longitude',y = 'Latitude',
fill = "Length of Age-6 Fish (cm)",size  = "Length of Age-6 Fish (cm)",
title = paste0(scens.title[i], ' Data and GAM-detected breaks ')) +
geom_hline(yintercept = breaksdf$lat_breaks, lwd = 1.1, linetype = 'dashed', col = 'red') +
geom_vline(xintercept = breaksdf$lon_breaks, lwd = 1.1, linetype = 'dashed', col = 'red')
idx <- idx + 1
# ## plot GAM smooth and deriv -- will have to be from single, sorta-representative boot
for(t in 1:length(Terms)){
pd <- plot(mod,   select = t, scheme  =2, lwd  =2, main = paste0(Terms[t],' Smoother'), cex.axis = 2, ylim = c(-10,ifelse(t != 3,10,500)))
temp0 <- pd[t] ## get this smoother
temp <- data.frame(cbind(temp0[[1]]$x,temp0[[1]]$fit, temp0[[1]]$se)); names(temp) = c('x','fit','se')
## plot smooth
plist[[idx]] <-  ggplot(temp, aes(x = x, y = fit)) +
theme_minimal() +
theme(panel.grid = element_blank())+
geom_line(lwd = 1.1) +
geom_line(aes(y= fit-se), linetype = 'dashed') +
geom_line(aes(y= fit+se), linetype = 'dashed') +
geom_rug(sides = 'b') +
labs(x = Terms[t], y = "smoother", title = paste0(letters[idx-1],") ",'Smoother for ',Terms[t] ))
idx <- idx+1
CI <- confint(m2.d, term = Terms[t])
m2.dtemp <- data.frame(cbind(m2.d$eval[,Terms[t]], m2.d[[Terms[t]]]$deriv,
CI[[1]]$upper, CI[[1]]$lower)); names(m2.dtemp) = c('x','deriv','upper','lower')
## plot deriv
plist[[idx]] <-  ggplot(m2.dtemp,aes(x = x, y = deriv))    +
theme_minimal() +
theme(panel.grid = element_blank())+
geom_line(lwd = 1.1) +
geom_hline(yintercept = 0, col = 'grey22') +
geom_line(aes(y= upper), linetype = 'dashed') +
geom_line(aes(y= lower), linetype = 'dashed') +
geom_vline(xintercept = breaksdf[,c('yr_breaks','lat_breaks','lon_breaks')[t]],
col = 'red', lwd = 1.1, linetype = 'dashed') +
labs(x = Terms[t], y = "f'(x)", title = paste0(letters[idx-1],") ",'First Derivative for ', Terms[t]))
idx <- idx+1
}
lay <- rbind(c(2,2,1,1,1),
c(3,3,1,1,1),
c(4,4,1,1,1),
c(5,5,1,1,1),
c(6,6,1,1,1),
c(7,7,1,1,1))
grid.arrange(grobs = plist, layout_matrix = lay) %>%
ggsave(plot = .,  file = paste0("./figures/analysis_",scen,".png"), width = 11, height = 8, units = 'in', dpi = 480)
}
CDF
cdf
cdf %>% filter(scen %in% c('NoBreaks','tempvar_R1R2')) %>% group_by(scen, gamLAT) %>% summarise(n = n())
cdf %>% filter(scen %in% c('NoBreaks','tempvar_R1R2')) %>% group_by(scen, gamLAT) %>% dplyr::summarise(n = n())
## "no discernable pattern in spurious breaks"
cdf %>% filter(scen %in% c('NoBreaks','tempvar_R1R2')) %>% group_by(scen, gamLAT,gamLON) %>% dplyr::summarise(n = n())
## "no discernable pattern in spurious breaks"
cdf %>% filter(scen %in% c('NoBreaks','tempvar_R1R2') & (LAT == FALSE  | LON == FALSE)) %>% group_by(scen, gamLAT,gamLON) %>% dplyr::summarise(n = n())
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) %>% group_by(scen, gamLAT) %>% dplyr::summarise(n = n())
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2'))) %>% group_by(scen, gamLAT) %>% dplyr::summarise(n = n())
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen, gamLAT) %>% dplyr::summarise(n = n())
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen, gamLAT) %>% dplyr::summarise(n = n()) %>% View(0)
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen, gamLAT) %>% dplyr::summarise(n = n()) %>% View()
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen, gamLAT, gamLON) %>% dplyr::summarise(n = n()) %>% View()
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen, gamLAT, gamLON) %>% dplyr::summarise(n = n(gamLAT %in% c(24,26)))
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen, gamLAT, gamLON) %>% dplyr::summarise(n = sum(gamLAT %in% c(24,26)))
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen) %>% dplyr::summarise(n = sum(gamLAT %in% c(24,26)))
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen) %>% dplyr::summarise(n = n(), inbounds = sum(gamLAT %in% c(24,26))) %>% mutate(inbounds/n)
## what proportion of wrong ones are only one off?
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen) %>% dplyr::summarise(n = n(), inbounds = sum(gamLAT %in% c(24,26)   |gamLON %in% c(24,26)  )) %>% mutate(inbounds/n)
## what proportion of wrong ones are only one off?
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen) %>% dplyr(summarise(n = n()))
## what proportion of wrong ones are only one off?
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen) %>% dplyr::summarise(n = n()))
## what proportion of wrong ones are only one off?
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen) %>% dplyr::summarise(n = n())
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen) %>% View()
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen) %>% dplyr::summarise(n = n(), inbounds = sum(gamLAT %in% c(24,26)   |gamLON %in% c(24,26)  )) %>% mutate(inbounds/n)
cdf %>% filter(scen %in% c('NoBreaks','tempvar_R1R2') & (YEAR == FALSE)) %>% group_by(scen, gamYR) %>% dplyr::summarise(n = n())
cdf %>% filter(YEAR == FALSE)) %>% group_by(scen, gamYR) %>% dplyr::summarise(n = n())
cdf %>% filter(YEAR == FALSE) %>% group_by(scen, gamYR) %>% dplyr::summarise(n = n())
subset(cdf, gamYR == 50)
subset(cdf, gamYR > 50)
## what proportion of wrong ones are only one off?
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen) %>% dplyr::summarise(n = n())
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen) %>% dplyr::summarise(n = n(), inbounds = sum(gamLAT %in% c(24,26)   |gamLON %in% c(24,26)  )) %>% mutate(inbounds/n)
cdf %>% filter(scen %in% c('F0L1S_25','F0L1S_R3')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen) %>% dplyr::summarise(n = n(), inbounds = sum(gamLAT %in% c(24,26)   |gamLON %in% c(24,26)  )) %>% mutate(inbounds/n)
cdf %>% filter(scen %in% c('F0L1S_25','F0L1S_R3') & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen) %>% dplyr::summarise(n = n(), inbounds = sum(gamLAT %in% c(24,26)   |gamLON %in% c(24,26)  )) %>% mutate(inbounds/n)
## what proportion of wrong ones are only one off?
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen) %>% dplyr::summarise(n = n())
## what proportion of wrong ones are only one off?
cdf %>% filter(!(scen %in% c('NoBreaks','tempvar_R1R2')) & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen,gamLAT) %>% dplyr::summarise(n = n())
cdf %>% filter(scen == 'FOLMW') %>% group_by(gamLAT) %>% dplyr::summarise(n = n())
cdf %>% filter(scen == 'FOLMW')
unique(cdf$scen)
cdf %>% filter(scen == 'F0LMW') %>% group_by(gamLAT) %>% dplyr::summarise(n = n())
cdf %>% filter(scen == 'F0LMW'& LAT == FALSE) %>% group_by(gamLAT) %>% dplyr::summarise(n = n())
cdf %>% filter(scen == 'F0LMW'& LAT == FALSE) %>% View()
unique(ldfprop$scen)
l = 4
idx
rm(cdf); cdf <- data.frame(); idx <-1 ## storage coverage prob totals, rbind each scen
for(b in 1:nboot){
## TMB FITTING ----
scen <- unique(ldfprop$scen)[l]
tempdf <- read.csv(paste0("./IBM_output/datasets/",scen,"_",b,".csv")) #%>% filter(Age == 6)
if(scen == 'NoBreaks') tempdf$REG <- as.factor('R1')
breaksdf <- read.csv( paste0("./GAM_output/ldf_raw_a",age,".csv")) %>% filter(scen ==  unique(ldfprop$scen)[l] & boot == b)
dat<-getGR(tempdf,breaksdf);rm(tempdf)
## generate DES matrix of vectors and a KEY for later comparison
DES <- KEY <-  matrix(NA, ncol = 1, nrow = nrow(dat))
dat$cREG <-  paste0(dat$gamREG,"_",dat$Period)
# DES <- ifelse(!is.na(dat$gamREG), as.numeric(factor(dat$gamREG)),1)-1 ## overwrite NA for nobreaks
DES <- ifelse(!is.na(dat$cREG), as.numeric(factor(dat$cREG)),1)-1 ## overwrite NA for nobreaks
KEY <- paste(scen,DES,sep = "_")
# keybase <- unique(ifelse(!is.na(dat$gamREG), as.character(dat$gamREG),"R1")) ## text regions
temp <- data.frame(DES = as.numeric(as.character(DES)), cREG = dat$cREG); temp <- unique(temp)
keybase <- paste(as.factor(temp[order(temp$DES),'cREG']));rm(temp)
## run TMB parest----
nStrata <- length(unique(DES))
data <-
list(
Length_cm = dat[,"Length_cm"],
Age = dat[,"Age"],
DES = as.vector(DES),
nStrata = nStrata
)
parameters <-
list(
log_Linf = rep(log(150), nStrata),
log_k = rep(log(0.3), nStrata),
t0 = rep(0.1, nStrata),
log_Sigma = 0
)
# Now estimate everything
map <- NULL
mod <- fitMod(data, parameters, modversion = 'sptlvb',map)
dat0 <- mod[[1]]
rep0 <- mod[[2]]
## reformat outputs ----
write.csv(rep0, file = paste0("./output_data/",scen,"_parEst_gam_",b,"_",Sys.Date(),'.csv'),row.names = F)
ypreds0 <- data.frame(dat0); names(ypreds0)[1] <- c('Predicted')
write.csv(ypreds0,  paste0("./output_data/",scen,"_predicts_",b,Sys.Date(),".csv"),row.names = F)
cat("Fit TMB model ",paste(scen)," boot ",b," & saved outputs \n")
## check and save coverage ----
source("./functions/compareBreaks.R")
} ## end boots
cdf
cdf %>% write.csv(.,file = paste0('./gam_output/cdf_',Sys.Date(),'.csv'),row.names = F)
library(readr)
cdf <- read_csv("GAM_output/cdf_2019-04-09.csv")
View(cdf)
cdf %>%
filter(!is.na(scen) & !is.na(L2))  %>%
select(scen, L1, L2) %>%
mutate(both = (L1 == T & L2 == T)) %>%
melt(id = c('scen')) %>%
group_by(scen,variable) %>%
dplyr::summarise(denom = n(), n = sum(value)) %>%
mutate(prop = round(n/denom,2))
cdf %>%
select(scen, LAT, LON, YEAR) %>%
mutate(both = (LAT == T & LON == T), all = (both == T & YEAR == T)) %>%
melt(id = c('scen')) %>%
group_by(scen,variable) %>%
dplyr::summarise(denom = n(), n = sum(value)) %>%
mutate(prop = round(n/denom,2))
## When did regional designation go right? (original analysis)
cdfaccu <- cdf %>%
select(scen, LAT, LON, YEAR) %>%
mutate(both = (LAT == T & LON == T), all = (both == T & YEAR == T)) %>%
melt(id = c('scen')) %>%
group_by(scen,variable) %>%
dplyr::summarise(denom = n(), n = sum(value)) %>%
mutate(prop = round(n/denom,2))
cdfaccu
subset(cdfaccu, scen == 'F0LMW')
cdfaccu <- cdf %>%
select(scen, LAT, LON, YEAR) %>%
mutate(both = (LAT == T & LON == T), all = (both == T & YEAR == T)) %>%
melt(id = c('scen')) %>%
group_by(scen,variable) %>%
dplyr::summarise(denom = n(), n = sum(value)) %>%
mutate(prop = round(n/denom,2))
write.csv(cdfaccu,file = paste0('./gam_output/cdf_accu_',Sys.Date(),'.csv'),row.names = F)
cdfprop
## Get coverage probs -- for all params.
## Note N varies because of varying # regions per boot.
cdfprop <- cdf %>%
filter(!is.na(scen) & !is.na(L2))  %>%
select(scen, L1, L2) %>%
mutate(both = (L1 == T & L2 == T)) %>%
melt(id = c('scen')) %>%
group_by(scen,variable) %>%
dplyr::summarise(denom = n(), n = sum(value)) %>%
mutate(prop = round(n/denom,2))
cdfprop
write.csv(cdfaccu,file = paste0('./gam_output/cdf_accu_',Sys.Date(),'.csv'),row.names = F)
plist1 <- list()
plist1[[1]] <- ggplot(cdfprop2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_text(size = 8),
legend.position = c(0.9,0.75)) +
scale_fill_grey()+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Coverage Probability', fill = 'Scenario',
title = 'a) Coverage Probability for Endpoints of Growth Curve') +
geom_bar(stat = 'identity',width=0.6, position = position_dodge(width=0.7)) +
facet_wrap(~variable)
# ggsave(plot = last_plot(),  file = paste0("./figures/cdfprop.png"), width = 9, height = 6, units = 'in', dpi = 480)
cdfaccu <- read.csv(paste0('./gam_output/cdf_accu_',Sys.Date(),'.csv'))
levels(cdfaccu$scen) <- c("Break at 25 deg.", "Break at 49 deg.",
"Low Contrast at 25 deg.",
"Overlap 20-25 deg.","No Breaks","Temporal Break at Year 50")
# cdfprop$scen  <- factor(cdfprop$scen , levels = cdfprop$scen [order(cdfprop$prop )])
levels(cdfaccu$variable) <- c('Lat, Long and Year','Both Latitude and Longitude','Latitude', 'Longitude' ,'Year'
)
# cdfaccu$variable <- factor(cdfaccu$variable, levels=c('L1','L2','Both L1 and L2'))
cdfaccu2 <- cdfaccu %>% filter(!(variable %in% c('Lat, Long and Year','Both Latitude and Longitude')))
# cdfaccu$scen  <- factor(cdfaccu$scen , levels = cdfaccu$scen [order(cdfprop$prop  )])
plist1[[2]] <- ggplot(cdfaccu2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_text( size = 8),
legend.position = 'none') +
scale_fill_grey()+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Proportion Detected Accurate Spatial Breaks', fill = 'Scenario', title = 'b) Proportion Detected Accurate Breaks') +
geom_bar(stat = 'identity',width=0.5, position = position_dodge(width=0.5)) +
facet_wrap(~variable)
ggarrange(plotlist = plist1, ncol=1, nrow=2, common.legend = TRUE, legend="bottom")
cdfprop <- read.csv(paste0('./gam_output/cdf_prop_',Sys.Date(),'.csv'))
levels(cdfprop$scen) <- c("Break at 25 deg.", "Break at 49 deg.",
"Low Contrast at 25 deg.",
"Overlap 20-25 deg.","No Breaks",
"Temporal Break at Year 50")
# cdfprop$scen  <- factor(cdfprop$scen , levels = cdfprop$scen [order(cdfprop$prop )])
levels(cdfprop$variable) <- c('Both L1 and L2','L1','L2' )
cdfprop2 <- cdfprop %>% filter(!(variable %in% c('Both L1 and L2')))
# cdfprop$variable <- factor(cdfprop$variable, levels=c('L1','L2','Both L1 and L2'))
plist1 <- list()
plist1[[1]] <- ggplot(cdfprop2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_text(size = 8),
legend.position = c(0.9,0.75)) +
scale_fill_grey()+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Coverage Probability', fill = 'Scenario',
title = 'a) Coverage Probability for Endpoints of Growth Curve') +
geom_bar(stat = 'identity',width=0.6, position = position_dodge(width=0.7)) +
facet_wrap(~variable)
# ggsave(plot = last_plot(),  file = paste0("./figures/cdfprop.png"), width = 9, height = 6, units = 'in', dpi = 480)
cdfaccu <- read.csv(paste0('./gam_output/cdf_accu_',Sys.Date(),'.csv'))
levels(cdfaccu$scen) <- c("Break at 25 deg.", "Break at 49 deg.",
"Low Contrast at 25 deg.",
"Overlap 20-25 deg.","No Breaks","Temporal Break at Year 50")
# cdfprop$scen  <- factor(cdfprop$scen , levels = cdfprop$scen [order(cdfprop$prop )])
levels(cdfaccu$variable) <- c('Lat, Long and Year','Both Latitude and Longitude','Latitude', 'Longitude' ,'Year'
)
# cdfaccu$variable <- factor(cdfaccu$variable, levels=c('L1','L2','Both L1 and L2'))
cdfaccu2 <- cdfaccu %>% filter(!(variable %in% c('Lat, Long and Year','Both Latitude and Longitude')))
# cdfaccu$scen  <- factor(cdfaccu$scen , levels = cdfaccu$scen [order(cdfprop$prop  )])
plist1[[2]] <- ggplot(cdfaccu2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_text( size = 8),
legend.position = 'none') +
scale_fill_grey()+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Proportion Detected Accurate Spatial Breaks', fill = 'Scenario', title = 'b) Proportion Detected Accurate Breaks') +
geom_bar(stat = 'identity',width=0.5, position = position_dodge(width=0.5)) +
facet_wrap(~variable)
ggarrange(plotlist = plist1, ncol=1, nrow=2, common.legend = TRUE, legend="bottom")
graphics.off()
cdfprop <- read.csv(paste0('./gam_output/cdf_prop_',Sys.Date(),'.csv'))
levels(cdfprop$scen) <- c("Break at 25 deg.", "Break at 49 deg.",
"Low Contrast at 25 deg.",
"Overlap 20-25 deg.","No Breaks",
"Temporal Break at Year 50")
# cdfprop$scen  <- factor(cdfprop$scen , levels = cdfprop$scen [order(cdfprop$prop )])
levels(cdfprop$variable) <- c('Both L1 and L2','L1','L2' )
cdfprop2 <- cdfprop %>% filter(!(variable %in% c('Both L1 and L2')))
# cdfprop$variable <- factor(cdfprop$variable, levels=c('L1','L2','Both L1 and L2'))
plist1 <- list()
plist1[[1]] <- ggplot(cdfprop2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_text(size = 8),
legend.position = c(0.9,0.75)) +
scale_fill_grey()+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Coverage Probability', fill = 'Scenario',
title = 'a) Coverage Probability for Endpoints of Growth Curve') +
geom_bar(stat = 'identity',width=0.6, position = position_dodge(width=0.7)) +
facet_wrap(~variable)
# ggsave(plot = last_plot(),  file = paste0("./figures/cdfprop.png"), width = 9, height = 6, units = 'in', dpi = 480)
cdfaccu <- read.csv(paste0('./gam_output/cdf_accu_',Sys.Date(),'.csv'))
levels(cdfaccu$scen) <- c("Break at 25 deg.", "Break at 49 deg.",
"Low Contrast at 25 deg.",
"Overlap 20-25 deg.","No Breaks","Temporal Break at Year 50")
# cdfprop$scen  <- factor(cdfprop$scen , levels = cdfprop$scen [order(cdfprop$prop )])
levels(cdfaccu$variable) <- c('Lat, Long and Year','Both Latitude and Longitude','Latitude', 'Longitude' ,'Year'
)
# cdfaccu$variable <- factor(cdfaccu$variable, levels=c('L1','L2','Both L1 and L2'))
cdfaccu2 <- cdfaccu %>% filter(!(variable %in% c('Lat, Long and Year','Both Latitude and Longitude')))
# cdfaccu$scen  <- factor(cdfaccu$scen , levels = cdfaccu$scen [order(cdfprop$prop  )])
plist1[[2]] <- ggplot(cdfaccu2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_text( size = 8),
legend.position = 'none') +
scale_fill_grey()+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Proportion Detected Accurate Spatial Breaks', fill = 'Scenario', title = 'b) Proportion Detected Accurate Breaks') +
geom_bar(stat = 'identity',width=0.5, position = position_dodge(width=0.5)) +
facet_wrap(~variable)
ggarrange(plotlist = plist1, ncol=1, nrow=2, common.legend = TRUE, legend="bottom")
ggarrange(plotlist = plist1, ncol=1, nrow=2, common.legend = TRUE, legend="bottom") %>%
ggsave(plot = .,  file = paste0("./figures/cdfprob_",Sys.Date(),".png"), width = 11, height = 8, units = 'in', dpi = 480)
cdf %>% group_by(YEAR) %>% dplyr::summarise(n = n())
250/(250+1182)
## Plot proportion agreegments ----
cdfprop <- read.csv(paste0('./gam_output/cdf_prop_',Sys.Date(),'.csv'))
levels(cdfprop$scen)
levels(cdfprop$scen) <- c("Break at 25 deg.", "Break at 49 deg.",
"Low Contrast at 25 deg.",
"Overlap 20-25 deg.","No Breaks",
"Temporal Break at Year 50")
# cdfprop$scen  <- factor(cdfprop$scen , levels = cdfprop$scen [order(cdfprop$prop )])
levels(cdfprop$variable) <- c('Both L1 and L2','L1','L2' )
cdfprop2 <- cdfprop %>% filter(!(variable %in% c('Both L1 and L2')))
ggplot(cdfprop2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_text(size = 8),
legend.position = c(0.9,0.75)) +
scale_fill_grey()+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Coverage Probability', fill = 'Scenario',
title = 'a) Coverage Probability for Endpoints of Growth Curve') +
geom_bar(stat = 'identity',width=0.6, position = position_dodge(width=0.7)) +
facet_wrap(~variable)
cdfprop
plist1[[2]]
ggplot(cdfaccu2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_text( size = 8),
legend.position = 'none') +
scale_fill_brewer(palette='Accent')+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Proportion Detected Accurate Spatial Breaks', fill = 'Scenario', title = 'b) Proportion Detected Accurate Breaks') +
geom_bar(stat = 'identity',width=0.5, position = position_dodge(width=0.5)) +
facet_wrap(~variable)
ggplot(cdfaccu2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_text( size = 8),
legend.position = 'none') +
scale_fill_brewer(palette='Dark2')+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Proportion Detected Accurate Spatial Breaks', fill = 'Scenario', title = 'b) Proportion Detected Accurate Breaks') +
geom_bar(stat = 'identity',width=0.5, position = position_dodge(width=0.5)) +
facet_wrap(~variable)
ggplot(cdfaccu2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_blank(),
legend.position = 'none') +
scale_fill_brewer(palette='Spectral')+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Proportion Detected Accurate Spatial Breaks', fill = 'Scenario', title = 'b) Proportion Detected Accurate Breaks') +
geom_bar(stat = 'identity',width=0.5, position = position_dodge(width=0.5)) +
facet_wrap(~variable)
ggplot(cdfaccu2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_blank(),
legend.position = 'none') +
# scale_fill_brewer(palette='Spectral')+
scale_fill_viridis_d()+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Proportion Detected Accurate Spatial Breaks', fill = 'Scenario', title = 'b) Proportion Detected Accurate Breaks') +
geom_bar(stat = 'identity',width=0.5, position = position_dodge(width=0.5)) +
facet_wrap(~variable)
# cdfprop$variable <- factor(cdfprop$variable, levels=c('L1','L2','Both L1 and L2'))
plist1 <- list()
plist1[[1]] <- ggplot(cdfprop2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_blank(),
legend.position = c(0.9,0.75)) +
scale_fill_viridis_d()+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Coverage Probability', fill = 'Scenario',
title = 'a) Coverage Probability for Endpoints of Growth Curve') +
geom_bar(stat = 'identity',width=0.6, position = position_dodge(width=0.7)) +
facet_wrap(~variable)
# cdfaccu$scen  <- factor(cdfaccu$scen , levels = cdfaccu$scen [order(cdfprop$prop  )])
plist1[[2]] <- ggplot(cdfaccu2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_blank(),
legend.position = 'none') +
scale_fill_viridis_d()+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Proportion Detected Accurate Spatial Breaks', fill = 'Scenario', title = 'b) Proportion Detected Accurate Breaks') +
geom_bar(stat = 'identity',width=0.5, position = position_dodge(width=0.5)) +
facet_wrap(~variable)
ggarrange(plotlist = plist1, ncol=1, nrow=2, common.legend = TRUE, legend="bottom")
ggarrange(plotlist = plist1, ncol=1, nrow=2, common.legend = TRUE, legend="bottom") %>%
ggsave(plot = .,  file = paste0("./figures/cdfprob_",Sys.Date(),".png"), width = 11, height = 8, units = 'in', dpi = 480)
cdf %>% filter(scen %in% c('F0L1S_25','F0L1S_R3') & (LAT == FALSE  | LON == FALSE)) %>%
group_by(scen) %>% dplyr::summarise(n = n(), inbounds = sum(gamLAT %in% c(24,26)   |gamLON %in% c(24,26)  )) %>% mutate(inbounds/n)
cdfaccu2 <- cdfaccu #%>% filter(!(variable %in% c('Lat, Long and Year','Both Latitude and Longitude')))
ggplot(cdfaccu2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_blank(),
legend.position = 'none') +
scale_fill_viridis_d()+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Proportion Detected Accurate Spatial Breaks', fill = 'Scenario', title = 'b) Proportion Detected Accurate Breaks') +
geom_bar(stat = 'identity',width=0.5, position = position_dodge(width=0.5)) +
facet_wrap(~variable)
ggplot(cdfaccu2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_blank(),
legend.position = 'none') +
scale_fill_viridis_d()+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Proportion Detected Accurate Spatial Breaks', fill = 'Scenario', title = 'b) Proportion Detected Accurate Breaks') +
geom_bar(stat = 'identity',width=0.5, position = position_dodge(width=0.5)) +
facet_wrap(~variable, nrow = 2)
# cdfaccu$scen  <- factor(cdfaccu$scen , levels = cdfaccu$scen [order(cdfprop$prop  )])
plist1[[2]] <- ggplot(cdfaccu2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_blank(),
legend.position = 'none') +
scale_fill_viridis_d()+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Proportion Detected Accurate Spatial Breaks', fill = 'Scenario', title = 'b) Proportion Detected Accurate Breaks') +
geom_bar(stat = 'identity',width=0.5, position = position_dodge(width=0.5)) +
facet_wrap(~variable, nrow = 2)
ggarrange(plotlist = plist1, ncol=1, nrow=2, common.legend = TRUE, legend="bottom")
cdfprop2 <- cdfprop# %>% filter(!(variable %in% c('Both L1 and L2')))
# cdfprop$variable <- factor(cdfprop$variable, levels=c('L1','L2','Both L1 and L2'))
plist1 <- list()
plist1[[1]] <- ggplot(cdfprop2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_blank(),
legend.position = c(0.9,0.75)) +
scale_fill_viridis_d()+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Coverage Probability', fill = 'Scenario',
title = 'a) Coverage Probability for Endpoints of Growth Curve') +
geom_bar(stat = 'identity',width=0.6, position = position_dodge(width=0.7)) +
facet_wrap(~variable)
# cdfaccu$scen  <- factor(cdfaccu$scen , levels = cdfaccu$scen [order(cdfprop$prop  )])
plist1[[2]] <- ggplot(cdfaccu2, aes(x = scen, y = prop, fill = scen)) +
theme_bw() +
theme(panel.grid = element_blank(),
axis.text.x = element_blank(),
legend.position = 'none') +
scale_fill_viridis_d()+
scale_y_continuous(limits = c(0,1)) +
labs(x = '',y = 'Proportion Detected Accurate Spatial Breaks', fill = 'Scenario', title = 'b) Proportion Detected Accurate Breaks') +
geom_bar(stat = 'identity',width=0.5, position = position_dodge(width=0.5)) +
facet_wrap(~variable, nrow = 2)
ggarrange(plotlist = plist1, ncol=1, nrow=2, common.legend = TRUE, legend="bottom")
